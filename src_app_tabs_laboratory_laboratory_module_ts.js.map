{"version":3,"file":"src_app_tabs_laboratory_laboratory_module_ts.js","mappings":"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","sources":["./src/app/shared/pipe/order-status.pipe.ts","./src/app/tabs/laboratory/laboratory-routing.module.ts","./src/app/tabs/laboratory/laboratory.module.ts","./src/app/tabs/laboratory/laboratory.page.ts","./src/app/tabs/laboratory/laboratory.page.html"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'orderStatus'\r\n})\r\nexport class OrderStatusPipe implements PipeTransform {\r\n\r\n  transform(value, listOrderStatus: any): string {\r\n    const statusValue = listOrderStatus.find((objStatus: any) => objStatus.id === value);\r\n    return statusValue.name;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LaboratoryPage } from './laboratory.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LaboratoryPage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LaboratoryPageRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LaboratoryPage } from './laboratory.page';\r\nimport { ExploreContainerComponentModule } from '../../explore-container/explore-container.module';\r\n\r\nimport { LaboratoryPageRoutingModule } from './laboratory-routing.module';\r\nimport {AppVersion} from '@ionic-native/app-version/ngx';\r\nimport { IsEmptyPipe } from 'src/app/shared/pipe/is-empty.pipe';\r\nimport { SharedModule } from 'src/app/shared/modules/share.module';\r\nimport { OrderStatusPipe } from 'src/app/shared/pipe/order-status.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ExploreContainerComponentModule,\r\n    LaboratoryPageRoutingModule,\r\n    SharedModule\r\n  ],\r\n  providers: [AppVersion],\r\n  declarations: [LaboratoryPage, OrderStatusPipe]\r\n})\r\nexport class LaboratoryPageModule {}\r\n","/* eslint-disable max-len */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PhotoService } from '../../services/photo.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport {\r\n  ActionSheetController,\r\n  AlertController,\r\n  IonSelect,\r\n  LoadingController,\r\n  NavController,\r\n  PickerController,\r\n  Platform,\r\n  PopoverController\r\n} from '@ionic/angular';\r\nimport { Constant } from '../../shared/constants/constant.class';\r\nimport { StorageService } from '../../services/storage.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { MainService } from '../../services/main.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { BadgeService } from '../../services/badge.service';\r\nimport { AppVersion } from '@ionic-native/app-version/ngx';\r\n\r\nimport { IonModal } from '@ionic/angular';\r\nimport { OverlayEventDetail } from '@ionic/core/components';\r\nimport { IsEmptyPipe } from 'src/app/shared/pipe/is-empty.pipe';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { GeneralService } from 'src/app/services/general-service';\r\n\r\n@Component({\r\n  selector: 'app-laboratory',\r\n  templateUrl: 'laboratory.page.html',\r\n  styleUrls: ['laboratory.page.scss']\r\n})\r\nexport class LaboratoryPage implements OnInit {\r\n  @ViewChild(IonModal) modal!: IonModal;\r\n  @ViewChild('popoverFormFilter') popoverFormFilter;\r\n  @ViewChild('orderStatusSelect') orderStatusSelect: IonSelect;\r\n  now: any;\r\n  userInfo: any;\r\n  isPopoverOpenFilter = false;\r\n  keywordSearch: any;\r\n\r\n\r\n  titleModalAddPatient = 'Thêm yêu cầu';\r\n  instructionModalPatient = 'Mời nhập thông tin bệnh nhân đầu tiên:';\r\n  numberOfNewPatients = 0;\r\n  isModalOpenFormPatient = false;\r\n\r\n\r\n  validFormInput = {\r\n    // isEmptyRequestType: false,\r\n    isEmptyFullName: false,\r\n    isEmptyNumberPhone: false,\r\n    isEmptyAdress: false,\r\n  };\r\n\r\n\r\n\r\n  customPopoverOptions = {\r\n    // header: 'Trạng thái đơn hàng',\r\n    subHeader: 'Chọn trạng thái đơn hàng cần lọc',\r\n    // message: 'Chỉ chọn một TTĐH',\r\n  };\r\n\r\n  itemPatientFormModalLab = {\r\n    valueRequestType: 0,\r\n    name: '',\r\n    phone: '',\r\n    address: '',\r\n    timeSample: this.datePipe.transform(new Date(), 'yyyy-MM-ddTHH:mm:ss'),\r\n    notes: '',\r\n  };\r\n\r\n  listPatientLab = [\r\n    {\r\n      name: '1234-1643 Trần Văn A',\r\n      phone: '0981123574',\r\n      address: 'CT6 Khu đô thị Việt Hưng, Long Biên, Hà Nội',\r\n      conditon: 'Viêm loét dạ dày tá tràng',\r\n      status: 'Chưa nhận yêu cầu',\r\n      notes: '',\r\n    },\r\n\r\n    {\r\n      name: '1234 - 2341 Trần Thị Lý',\r\n      phone: '0234538592',\r\n      address: '257 Giải phóng, Hai Bà Trưng, Hà Nội',\r\n      conditon: 'Sốt xuất huyết',\r\n      status: 'Đã nhận yêu cầu và đang xử lý',\r\n      notes: '',\r\n    },\r\n\r\n    {\r\n      name: '1234 - 1643 Lý Thuỳ Linh',\r\n      phone: '0903245394',\r\n      address: '40 Phường Liệt, Thanh Xuân, Hà Nội',\r\n      conditon: 'Viêm gan A',\r\n      status: 'Đã trả kết quả',\r\n      notes: '',\r\n    }\r\n  ];\r\n\r\n  // Chức dữ liệu cơ sở, khởi tạo ban đầu.\r\n  initDatas: any;\r\n\r\n  // Danh sách các Phiểu xét nghiếm\r\n  listOrder: any[] = [];\r\n\r\n  // Danh sách yêu cầu Xét nghiệm\r\n  listRequest: any[] = [];\r\n\r\n  // Danh sách đối tác\r\n  listPartner = [];\r\n\r\n  // Danh sách các loại yêu cầu\r\n  listTypeOrder = [];\r\n\r\n  // Form lọc theo filter\r\n  formFilterTestSheet = {\r\n    namePatient: '',\r\n    phoneNoPatient: '',\r\n    orderStatus: 0,\r\n  };\r\n\r\n  filterInterval = {\r\n    isShow: false,\r\n    presentTime: '',\r\n    pastTime: '',\r\n  };\r\n\r\n  customAlertOptionsRequestType = {\r\n    header: 'Chọn loại yêu cầu',\r\n    // subHeader: '',\r\n    // message: '',\r\n    translucent: true,\r\n  };\r\n\r\n\r\n  constructor(public photoService: PhotoService,\r\n    private popoverController: PopoverController,\r\n    private router: Router,\r\n    private platform: Platform,\r\n    private localStorage: StorageService,\r\n    private storage: Storage,\r\n    public navCtrl: NavController,\r\n    private pickerCtrl: PickerController,\r\n    private actionSheetCtrl: ActionSheetController,\r\n    private notificationService: NotificationService,\r\n    private mainService: MainService,\r\n    public badgeService: BadgeService,\r\n    private appVersion: AppVersion,\r\n    private alertController: AlertController,\r\n    private orderService: OrderService,\r\n    private loadingCtrl: LoadingController,\r\n    private datePipe: DatePipe,\r\n    private generalService: GeneralService,\r\n  ) {\r\n    this.now = new Date();\r\n\r\n\r\n    this.listPatientLab = [\r\n      {\r\n        name: '1234-1643 Trần Văn A',\r\n        phone: '0981123574',\r\n        address: 'CT6 Khu đô thị Việt Hưng, Long Biên, Hà Nội',\r\n        conditon: 'Viêm loét dạ dày tá tràng',\r\n        status: 'Chưa nhận yêu cầu',\r\n        notes: '',\r\n      },\r\n\r\n      {\r\n        name: '1234 - 2341 Trần Thị Lý',\r\n        phone: '0234538592',\r\n        address: '257 Giải phóng, Hai Bà Trưng, Hà Nội',\r\n        conditon: 'Sốt xuất huyết',\r\n        status: 'Đã nhận yêu cầu và đang xử lý',\r\n        notes: '',\r\n      },\r\n\r\n      {\r\n        name: '1234 - 1643 Lý Thuỳ Linh',\r\n        phone: '0903245394',\r\n        address: '40 Phường Liệt, Thanh Xuân, Hà Nội',\r\n        conditon: 'Viêm gan A',\r\n        status: 'Đã trả kết quả',\r\n        notes: '',\r\n      }\r\n    ];\r\n  }\r\n\r\n\r\n  onKeyUpInputNamePatient() {\r\n    // Set is show message error Fullname\r\n    this.validFormInput.isEmptyFullName = this.isEmpty(this.itemPatientFormModalLab.name);\r\n  }\r\n\r\n  onKeyUpInputNumberPhone() {\r\n    // Set is show message error Numberphone\r\n    this.validFormInput.isEmptyNumberPhone = this.isEmpty(this.itemPatientFormModalLab.phone);\r\n  }\r\n\r\n\r\n  onKeyUpInputAddress() {\r\n    // Set is show message error Address\r\n    this.validFormInput.isEmptyAdress = this.isEmpty(this.itemPatientFormModalLab.address);\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad');\r\n  }\r\n\r\n  ionViewWillLeave() {\r\n    console.log('ionViewWillLeave');\r\n  }\r\n\r\n  ionViewDidLeave() {\r\n    console.log('ionViewDidLeave');\r\n  }\r\n\r\n  ionViewWillUnload() {\r\n    console.log('ionViewWillUnload');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    console.log('ionViewDidEnter');\r\n  }\r\n\r\n  async ionViewWillEnter() {\r\n    console.log('ionViewWillEnter');\r\n\r\n\r\n  }\r\n\r\n  async ngOnInit() {\r\n    console.log('ngOnInit');\r\n    this.localStorage.getSelectedUser().then((res) => {\r\n      this.userInfo = res;\r\n    });\r\n\r\n    // Lấy dữ liệu cho biến DS Dữ liệu khởi tạo\r\n    await this.getListInitialData();\r\n\r\n\r\n    // Lấy dữ liệu danh sách phiếu xét nghiệm\r\n    const payload = {\r\n      barcode: '',\r\n      patient: '',\r\n      status: 0,\r\n      fromDate: '',\r\n      toDate: '',\r\n      assignToUserId: 0,\r\n      counselors: null,\r\n      partnerId: 0,\r\n      isSendSMS: null,\r\n      isPrintResult: null,\r\n      patientAge: null,\r\n      phoneNo: null,\r\n      keyword: '',\r\n      pageSize: 50,\r\n      page: 1,\r\n    };\r\n    await this.getListOrder(payload, true);\r\n\r\n    // Lấy dữ liệu danh sách yêu cầu xét nghiệm\r\n    // const payload = {\r\n    //   page: 1,\r\n    //   pageSize: 50,\r\n    //   fromDate: null,\r\n    //   toDate: null,\r\n    //   phone: null,\r\n    //   partnerId: null,\r\n    //   receiveUserId: null,\r\n    //   called: null,\r\n    //   arrived: null,\r\n    //   arrivedLabo: null,\r\n    //   warning: null,\r\n    //   received: null,\r\n    //   requestTypeId: null,\r\n    //   userCreated: null,\r\n    //   canceled: false\r\n    // };\r\n    // await this.getListRequestByPayload(payload, true);\r\n\r\n    // Lấy danh sách loại yêu cầu\r\n    await this.getListOrderType();\r\n\r\n\r\n    // Lấy dữ liệu danh sách các đối tác\r\n    // await this.getListPartner();\r\n  }\r\n\r\n  async showLoading() {\r\n    const loading = await this.loadingCtrl.create({\r\n      message: 'Dữ liệu đang tải lên ...',\r\n      duration: 2000,\r\n    });\r\n\r\n    loading.present();\r\n  }\r\n\r\n  getListOrder(payload: any, isLoading: boolean) {\r\n    // Show thông báo delay thời gian chờ loading dữ liệu\r\n    if (isLoading) {\r\n      this.showLoading();\r\n    }\r\n\r\n\r\n    this.orderService.getOrders(payload).subscribe(\r\n      (res) => {\r\n        if (res != null) {\r\n          this.listOrder = res.data;\r\n          console.log('this.listOrder : ', this.listOrder);\r\n        }\r\n      },\r\n      (error) => {\r\n        if (error.status === 403) {\r\n          this.notificationService.showMessage(Constant.DANGER, `Người dùng có quyền truy cập`);\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          this.notificationService.showMessage(Constant.DANGER, `Dữ liệu trả về đã có lỗi xảy ra`);\r\n        }\r\n      });\r\n  }\r\n\r\n  getListOrderType() {\r\n    this.generalService.getListRequestType().subscribe(\r\n      (res) => {\r\n        if (res !== null) {\r\n          console.log('getListOrderType res: ', res);\r\n          this.listTypeOrder = res.filter(en => en.requestTypeCode === 'LM' || en.requestTypeCode === 'TM');\r\n        }\r\n      },\r\n      (error) => {\r\n      }\r\n    );\r\n  }\r\n\r\n  // getListRequestByPayload(payload: any, isLoading: boolean) {\r\n  //   // Show thông báo delay thời gian chờ loading dữ liệu\r\n  //   if (isLoading) {\r\n  //     this.showLoading();\r\n  //   }\r\n\r\n  //   this.generalService.getRequest(payload).subscribe(\r\n  //     (res: any) => {\r\n  //       if (res != null) {\r\n  //         this.listRequest = res.data;\r\n  //         console.log('this.listRequest : ', this.listRequest);\r\n  //       }\r\n  //     },\r\n  //     (error) => {\r\n  //       if (error.status === 403) {\r\n  //         this.notificationService.showMessage(Constant.DANGER, `Người dùng có quyền truy cập`);\r\n  //         this.router.navigate(['/login']);\r\n  //       } else {\r\n  //         this.notificationService.showMessage(Constant.DANGER, `Dữ liệu trả về đã có lỗi xảy ra`);\r\n  //       }\r\n  //     });\r\n\r\n  // }\r\n\r\n  getListInitialData() {\r\n    this.initDatas = JSON.parse(localStorage.getItem(Constant.INIT_DATA));\r\n  }\r\n\r\n  presentPopoverFilter(e: Event) {\r\n    this.popoverFormFilter.event = e;\r\n    this.isPopoverOpenFilter = true;\r\n  }\r\n\r\n  getListPartner() {\r\n    this.generalService.getListPartner().subscribe(\r\n      (res) => {\r\n        this.listPartner = res;\r\n      },\r\n      (error) => { }\r\n    );\r\n  }\r\n\r\n  showProfile() {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.localStorage.clearAll();\r\n    this.popoverController.dismiss();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  doRefresh($event) {\r\n\r\n  }\r\n\r\n\r\n  setOpenModalAddPatient(isOpen: boolean) {\r\n    this.isModalOpenFormPatient = isOpen;\r\n  }\r\n\r\n  openModalPatientLab() {\r\n    // Reset lại lời dẫn\r\n    this.instructionModalPatient = 'Mời nhập thông tin bệnh nhân đầu tiên:';\r\n    this.numberOfNewPatients = 0;\r\n\r\n    this.resetFormModalPatient();\r\n    this.restartValidFormAddPatient();\r\n    this.setOpenModalAddPatient(true);\r\n  }\r\n\r\n  restartValidFormAddPatient() {\r\n    this.validFormInput.isEmptyAdress = false;\r\n    this.validFormInput.isEmptyFullName = false;\r\n    this.validFormInput.isEmptyNumberPhone = false;\r\n    // this.validFormInput.isEmptyRequestType = false;\r\n\r\n  }\r\n\r\n  cancelModalAddPatient() {\r\n    this.setOpenModalAddPatient(false);\r\n    // this.modal.dismiss(null, 'cancel');\r\n  }\r\n\r\n\r\n  confirmPatientModal() {\r\n    const isName = !this.isEmpty(this.itemPatientFormModalLab.name);\r\n    this.validFormInput.isEmptyFullName = !isName;\r\n\r\n    const isPhone = !this.isEmpty(this.itemPatientFormModalLab.phone);\r\n    this.validFormInput.isEmptyNumberPhone = !isPhone;\r\n\r\n\r\n    const isAddress = !this.isEmpty(this.itemPatientFormModalLab.address);\r\n    this.validFormInput.isEmptyAdress = !isAddress;\r\n\r\n\r\n    // const isRequest = !(this.itemPatientFormModalLab.valueRequestType === 0);\r\n    // this.validFormInput.isEmptyRequestType = !isRequest;\r\n\r\n    return (isName && isPhone && isAddress);\r\n  }\r\n\r\n  saveModalAddPatient() {\r\n    if (this.confirmPatientModal()) {\r\n      // Thêm mới một item Patient\r\n      this.listPatientLab.push(JSON.parse(JSON.stringify(this.itemPatientFormModalLab)));\r\n\r\n      const item = {\r\n        id: 0,\r\n        patientId: null,\r\n        code: null,\r\n        name: null,\r\n        orderDoctor: null,\r\n        orderDate: null,\r\n        visitCode: null,\r\n        visiteDate: null,\r\n        chanDoan: null,\r\n        khoa: null,\r\n        buong: null,\r\n        giuong: null,\r\n        status: null,\r\n        phoneNo: null,\r\n        address: null,\r\n        note: this.itemPatientFormModalLab.notes,\r\n        partnerId: null,\r\n        details: [\r\n          {\r\n            orderTypeId: null,\r\n            price: null\r\n          }\r\n        ],\r\n        paymentType: 1,\r\n        patient: {\r\n          id: null,\r\n          code: null,\r\n          name: this.itemPatientFormModalLab.name,\r\n          sex: null,\r\n          dob: null,\r\n          yob: null,\r\n          cmnd: null,\r\n          address: this.itemPatientFormModalLab.address,\r\n          phoneNo: this.itemPatientFormModalLab.phone,\r\n          email: null\r\n        },\r\n        momWeight: null,\r\n        momHeightCM: null,\r\n        ultrasoundDate: null,\r\n        gestationalWeek: null,\r\n        gestationalDay: null,\r\n        pregnancyNo: null,\r\n        fetusAmount: null,\r\n        nt: null,\r\n        crl: null,\r\n        expectedDateOfBirth: null,\r\n        requestId: null,\r\n        lat: null,\r\n        lng: null,\r\n        assignToUserId: null,\r\n        specimenID: null,\r\n        privateNote: null,\r\n        discountPaymentType: null,\r\n        extraDiscountPaymentType: null,\r\n        bsdiscountPaymentType: null,\r\n        paidType: null,\r\n        utmSource: null,\r\n        dateTakenSpecimen: null,\r\n        addressLongitude: null,\r\n        addressLatitude: null\r\n      };\r\n      // this.orderService.\r\n      this.generalService.createOrder(item).subscribe(\r\n        (res: any) => {\r\n          if (res.isValid) {\r\n            // console.log('generalService res', res );\r\n            // Reset form model lab\r\n            this.resetFormModalPatient();\r\n            this.notificationService.showMessage(Constant.SUCCESS, `Đã tạo phiếu xét nghiệm cho BN ${this.itemPatientFormModalLab.name}`);\r\n            // Đóng modal\r\n            this.setOpenModalAddPatient(false);\r\n          } else {\r\n            this.notificationService.showMessage(Constant.DANGER, `Đã có lỗi : ${res.errors[0].errorMessage}`);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.notificationService.showMessage(Constant.DANGER, `Đã có lỗi 1`);\r\n        },\r\n        (ret: any) => {\r\n          this.notificationService.showMessage(Constant.DANGER, `Đã có lỗi ${ret[0].errorMessage}`);\r\n        }\r\n      );\r\n      this.notificationService.showMessage(Constant.DANGER, `Lỗi ngoài phạm vi xử lý, nghiệm vụ chưa hoàn chỉnh`);\r\n    } else {\r\n      this.notificationService.showMessage(Constant.DANGER, `Đã có lỗi 2`);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  nextModalPatient() {\r\n    if (this.confirmPatientModal()) {\r\n      // Thêm mới một item Patient\r\n      this.listPatientLab.push(JSON.parse(JSON.stringify(this.itemPatientFormModalLab)));\r\n\r\n      // Thêm +1 bệnh nhân thành công. Tăng biến đếm số lượng bệnh nhân thêm mới thành công lên 1\r\n      this.numberOfNewPatients++;\r\n\r\n      // Thay đổ lời đầu modal kkhi thêm mới\r\n      this.instructionModalPatient = `Đã thêm <strong>${this.numberOfNewPatients}</strong> bệnh nhân. Mời nhập thông tin bệnh nhân tiếp theo:`;\r\n\r\n      // Reset form model lab\r\n      this.resetFormModalPatient();\r\n    };\r\n\r\n  }\r\n\r\n  onWillDismiss(event: Event) {\r\n    const ev = event as CustomEvent<OverlayEventDetail<string>>;\r\n    if (ev.detail.role === 'confirm') {\r\n\r\n    } else if (ev.detail.role === 'next') {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  resetFormModalPatient() {\r\n    this.itemPatientFormModalLab = {\r\n      valueRequestType: 0,\r\n      name: '',\r\n      phone: '',\r\n      address: '',\r\n      timeSample: this.datePipe.transform(new Date(), 'yyyy-MM-ddTHH:mm:ss'),\r\n      notes: '',\r\n    };\r\n  }\r\n\r\n\r\n  async handleChangeSearch(event: any) {\r\n    this.keywordSearch = event.target.value;\r\n\r\n    const payload = {\r\n      barcode: null,\r\n      patient: null,\r\n      status: null,\r\n      fromDate: this.filterInterval.pastTime,\r\n      toDate: this.filterInterval.presentTime,\r\n      assignToUserId: null,\r\n      counselors: null,\r\n      partnerId: null,\r\n      isSendSMS: null,\r\n      isPrintResult: null,\r\n      patientAge: null,\r\n      phoneNo: null,\r\n      keyword: this.keywordSearch,\r\n      pageSize: 50,\r\n      page: 1,\r\n    };\r\n    await this.getListOrder(payload, false);\r\n\r\n\r\n  }\r\n\r\n\r\n  async handleChangeSelectOrderStatus(event: any) {\r\n    this.formFilterTestSheet.orderStatus = event.target.value;\r\n  }\r\n\r\n\r\n  async handleChangeFilterInterval(event: any) {\r\n    const value = event.target.value;\r\n    // let isShowFilterInterval = this.filterInterval.isShow;\r\n    const pastTime = new Date();\r\n    const presentTime = new Date();\r\n\r\n    pastTime.setHours(0, 0, 0, 0);\r\n\r\n    // Get the current day of the week (0-6, where Sunday is 0)\r\n    const currentDay = presentTime.getDay();\r\n    // Subtract the number of days elapsed in the current week\r\n    let daysToSubtract: any;\r\n    switch (value) {\r\n      case 1:\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 0;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Đầu ngày hôm nay', pastTime);\r\n        break;\r\n      case 2:\r\n        // Subtract 1 day\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 1;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Cách đây 1 ngày trước', pastTime);\r\n        break;\r\n      case 3:\r\n        // Subtract 7 day\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 7;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Cách đây 7 ngày', pastTime);\r\n        break;\r\n      case 4:\r\n        // Subtract 14 day\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 14;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Cách đây 14 ngày', pastTime);\r\n        break;\r\n      case 5:\r\n        // Subtract 30 day\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 30;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Cách đây 30 ngày', pastTime);\r\n        break;\r\n      case 6:\r\n        // Đầu tuần này\r\n        this.filterInterval.isShow = false;\r\n\r\n        daysToSubtract = currentDay === 0 ? 6 : currentDay - 1;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Đầu tuần này', pastTime);\r\n        break;\r\n      case 7:\r\n        // Đầu tuần trước\r\n        this.filterInterval.isShow = false;\r\n\r\n        daysToSubtract = currentDay + 7 - 1;\r\n        console.log('daysToSubtract', daysToSubtract);\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log(' Đầu tuần trước', pastTime);\r\n        break;\r\n      case 8:\r\n        // Đầu tháng này\r\n        this.filterInterval.isShow = false;\r\n\r\n        pastTime.setDate(1);\r\n        // console.log('Đầu tháng này', pastTime);\r\n        break;\r\n      case 9:\r\n        // Đầu tháng trước\r\n        this.filterInterval.isShow = false;\r\n\r\n        // Set the date to the first day of the current mounth\r\n        pastTime.setDate(1);\r\n\r\n        // Subtract one month from the date\r\n        pastTime.setMonth(pastTime.getMonth() - 1);\r\n\r\n        // console.log('Đầu tháng trước ', pastTime);\r\n        break;\r\n      case 10:\r\n        // Hiện calender cho hai thời điểm lọc dữ liệu.\r\n        this.filterInterval.isShow = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // Đặt dữ liệu ban đầu cho khoảng thời gian lọc dữ liệu\r\n    // Bắt đầu - Thời điểm 0h ngày hôm nay\r\n    this.filterInterval.pastTime = this.datePipe.transform(pastTime, 'yyyy-MM-ddTHH:mm:ss');\r\n    // console.log('this.filterInterval.pastTime : ', this.filterInterval.pastTime );\r\n\r\n\r\n    // Kết thúc - Thời điểm hiện tại\r\n    this.filterInterval.presentTime = this.datePipe.transform(presentTime, 'yyyy-MM-ddTHH:mm:ss');\r\n\r\n    const payload = {\r\n      barcode: null,\r\n      patient: null,\r\n      status: null,\r\n      fromDate: pastTime,\r\n      toDate: presentTime,\r\n      assignToUserId: null,\r\n      counselors: null,\r\n      partnerId: null,\r\n      isSendSMS: null,\r\n      isPrintResult: null,\r\n      patientAge: null,\r\n      phoneNo: null,\r\n      keyword: this.keywordSearch,\r\n      pageSize: 50,\r\n      page: 1,\r\n    };\r\n\r\n    await this.getListOrder(payload, true);\r\n  }\r\n\r\n  async handleChangeFilterIntervalCustomByUser(event: any) {\r\n    // console.log('handleChangeFilterIntervalCustomByUser event', event);\r\n    const pastTime = this.filterInterval.pastTime;\r\n    // console.log('pastTime: ',pastTime);\r\n    const presentTime = this.filterInterval.presentTime;\r\n    // console.log('presentTime: ',presentTime);\r\n\r\n\r\n    const payload = {\r\n      barcode: null,\r\n      patient: null,\r\n      status: 0,\r\n      fromDate: pastTime,\r\n      toDate: presentTime,\r\n      assignToUserId: 0,\r\n      counselors: null,\r\n      partnerId: 0,\r\n      isSendSMS: null,\r\n      isPrintResult: null,\r\n      patientAge: null,\r\n      phoneNo: null,\r\n      keyword: this.keywordSearch,\r\n      pageSize: 50,\r\n      page: 1,\r\n    };\r\n    await this.getListOrder(payload, true);\r\n  }\r\n\r\n  handleChangeRequestType(event: any) {\r\n\r\n    // console.log('handleChangePartner event: ', event);\r\n    const value = event.target.value;\r\n    // this.itemPatientFormModalLab.valueRequestType = value;\r\n    // this.validFormInput.isEmptyRequestType = (value === 0);\r\n\r\n  }\r\n\r\n  handleChangeTimeSample(event: any) {\r\n\r\n  }\r\n\r\n  async onSearchByFormFilter() {\r\n\r\n    const payload = {\r\n      barcode: null,\r\n      patient: null,\r\n      status: null,\r\n      fromDate: this.filterInterval.pastTime,\r\n      toDate: this.filterInterval.presentTime,\r\n      assignToUserId: null,\r\n      counselors: null,\r\n      partnerId: null,\r\n      isSendSMS: null,\r\n      isPrintResult: null,\r\n      patientAge: null,\r\n      phoneNo: this.formFilterTestSheet.phoneNoPatient,\r\n      keyword: this.formFilterTestSheet.namePatient,\r\n      pageSize: 50,\r\n      page: 1,\r\n    };\r\n    await this.getListOrder(payload, false);\r\n\r\n    this.popoverFormFilter.dismiss();\r\n  }\r\n\r\n\r\n  restartFormFilter() {\r\n    this.formFilterTestSheet.namePatient = '';\r\n    this.formFilterTestSheet.phoneNoPatient = '';\r\n    this.orderStatusSelect.value = 0;\r\n  }\r\n\r\n  pushLog(msg) {\r\n    console.log(msg);\r\n  }\r\n\r\n  cancelFormFilter() {\r\n    this.popoverFormFilter.dismiss();\r\n  }\r\n\r\n  isEmpty(value: any) {\r\n    return new IsEmptyPipe().transform(value);\r\n  }\r\n}\r\n","<!-- <ion-content>\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\r\n    <ion-refresher-content\r\n      pullingIcon=\"chevron-down-circle-outline\"\r\n      pullingText=\"Thả tay để tải lại dữ liệu\"\r\n      refreshingSpinner=\"circles\"\r\n      refreshingText=\"Đang tải...\">\r\n    </ion-refresher-content>\r\n  </ion-refresher>\r\n  <div class=\"sticky-header\">\r\n    <ion-row class=\"info-row\" #hideheader>\r\n      <ion-col size=\"10\">\r\n        <ion-text color=\"dark\" *ngIf=\"userInfo\">\r\n          <strong style=\"font-size: 18px\">{{userInfo.fullname}}</strong><br>\r\n          <span style=\"font-size: 12px;color:lightslategray\">Ngày {{ now | date:'dd/MM/yyyy'}}</span>\r\n        </ion-text>\r\n      </ion-col>\r\n      <ion-col size=\"2\" class=\"ion-padding-start\">\r\n        <ion-button fill=\"clear\" id=\"trigger-button\" class=\"ion-no-padding\">\r\n          <ion-icon name=\"person-outline\" slot=\"icon-only\"></ion-icon>\r\n        </ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  </div>\r\n  <ion-popover trigger=\"trigger-button\" [isOpen]=\"isPopoverOpen\">\r\n    <ng-template>\r\n      <ion-list scroll=\"false\" class=\"ion-no-padding\">\r\n        <ion-item class=\"ion-no-border ion-no-padding\" (click)=\"showProfile()\">\r\n          <ion-avatar class=\"size15\" slot=\"start\">\r\n            <ion-icon size=\"small\" name=\"person-outline\"></ion-icon>\r\n          </ion-avatar>\r\n          <ion-label>Thông tin</ion-label>\r\n        </ion-item>\r\n        <ion-item lines=\"none\" class=\"last ion-no-padding\" (click)=\"logout()\">\r\n          <ion-avatar class=\"size15\" slot=\"start\">\r\n            <ion-icon name=\"log-out-outline\" size=\"small\"></ion-icon>\r\n          </ion-avatar>\r\n          <ion-label class=\"btn\">Đăng xuất</ion-label>\r\n        </ion-item>\r\n      </ion-list>\r\n    </ng-template>\r\n  </ion-popover>\r\n</ion-content> -->\r\n\r\n<!-- <ion-label>formFilterTestSheet value: {{ formFilterTestSheet | json }}</ion-label> -->\r\n<ion-content class=\"ion-padding\">\r\n  <!-- Nội dung -->\r\n  <div>\r\n    <!-- Khu vực tìm kiếm -->\r\n    <div>\r\n      <!-- Tìm liếm - lọc [debounce]=\"100\" id=\"popover-search\" (keyup.enter)=\"onSearchByKeyword()\" -->\r\n      <div style=\"display: flex;\">\r\n        <ion-searchbar autocomplete=\"on\" (ionChange)=\"handleChangeSearch($event)\"\r\n          placeholder=\"Tìm kiếm ...\"></ion-searchbar>\r\n\r\n        <!--    <ion-list style=\"position: absolute; z-index: 100000;\">\r\n          <ion-item *ngFor=\"let name of listOrder\">\r\n            <ion-label>{{ name }}</ion-label>\r\n          </ion-item>\r\n        </ion-list> -->\r\n\r\n\r\n        <ion-buttons (click)=\"presentPopoverFilter($event)\" slot=\"start\">\r\n          <ion-button>\r\n            <ion-icon slot=\"icon-only\" name=\"funnel-outline\"></ion-icon>\r\n          </ion-button>\r\n        </ion-buttons>\r\n\r\n        <ion-popover #popoverFormFilter size=\"auto\" [isOpen]=\"isPopoverOpenFilter\"\r\n          (didDismiss)=\"isPopoverOpenFilter = false\">\r\n          <ng-template>\r\n            <ion-content class=\"ion-padding\">\r\n              <ion-label style=\"font-size: small;\">Lọc dữ liệu theo ...</ion-label>\r\n              <ion-list>\r\n                <ion-item style=\"font-size: small;\">\r\n                  <ion-label position=\"stacked\">\r\n                    <ion-icon name=\"person-outline\"></ion-icon>\r\n                    Tên bệnh nhân\r\n                  </ion-label>\r\n                  <ion-input placeholder=\"Nhập tên bệnh nhân ...\"\r\n                    [(ngModel)]=\"formFilterTestSheet.namePatient\"></ion-input>\r\n                </ion-item>\r\n\r\n                <ion-item style=\"font-size: small;\">\r\n                  <ion-label position=\"stacked\">\r\n                    <ion-icon name=\"call-outline\"></ion-icon>\r\n                    Số điện thoại\r\n                  </ion-label>\r\n                  <ion-input type=\"tel\" placeholder=\"Nhập SĐT ...\"\r\n                    [(ngModel)]=\"formFilterTestSheet.phoneNoPatient\"></ion-input>\r\n                </ion-item>\r\n\r\n\r\n\r\n\r\n\r\n                <ion-item style=\"font-size: small;\">\r\n                  <ion-label position=\"stacked\">\r\n                    <ion-icon name=\"send-outline\"></ion-icon>\r\n                    Trạng thái Đơn hàng\r\n                  </ion-label>\r\n                  <ion-select #orderStatusSelect style=\"font-size: small;\" label=\"Trạng thái Đơn hàng\"\r\n                    [interfaceOptions]=\"customPopoverOptions\" interface=\"alert\" label-placement=\"floating\"\r\n                    placeholder=\"Trạng thái đơn hàng\" (ionChange)=\"handleChangeSelectOrderStatus($event)\">\r\n                    <ion-select-option *ngFor=\"let order of initDatas.orderStatus\" style=\"font-size: small;\"\r\n                      [value]=\"order.id\">{{order.name}}</ion-select-option>\r\n                    <!-- <ion-select-option  style=\"font-size: small;\" value=\"0\">Chưa nhận yêu cầu</ion-select-option>\r\n                    <ion-select-option  style=\"font-size: small;\" value=\"1\">Đã nhận yêu cầu và đang xử lý</ion-select-option>\r\n                    <ion-select-option  style=\"font-size: small;\" value=\"2\">Đã trả kết quả</ion-select-option> -->\r\n                  </ion-select>\r\n                </ion-item>\r\n              </ion-list>\r\n              <ion-buttons style=\"display: flex; justify-content: space-evenly ; margin-top: 0.5rem;\">\r\n                <ion-button size=\"small\" fill=\"outline\" color=\"medium\" title=\"Huỷ\"\r\n                  (click)=\"cancelFormFilter()\"><ion-icon name=\"close-outline\"></ion-icon></ion-button>\r\n                <ion-button size=\"small\" fill=\"outline\" color=\"danger\" title=\"Xoá lọc\"\r\n                  (click)=\"restartFormFilter()\"><ion-icon size=\"small\" name=\"trash-outline\"></ion-icon></ion-button>\r\n                <ion-button size=\"small\" fill=\"solid\" (click)=\"onSearchByFormFilter()\" title=\"Lọc dữ liệu ...\"><ion-icon\r\n                    size=\"small\" name=\"search-outline\"></ion-icon></ion-button>\r\n              </ion-buttons>\r\n            </ion-content>\r\n          </ng-template>\r\n        </ion-popover>\r\n        <!-- <ion-item>\r\n        </ion-item> -->\r\n\r\n        <!-- <div style=\"display: flex; justify-content: center; align-items: center;\">\r\n          <ion-list>\r\n            <ion-item>\r\n              <ion-select interface=\"popover\" placeholder=\"Lọc\" >\r\n                <ion-select-option  value=\"dealthcare\">Nhóm BP</ion-select-option>\r\n                <ion-select-option  value=\"products\">Nhóm SP</ion-select-option>\r\n              </ion-select>\r\n              <ion-icon slot=\"start\" name=\"funnel-outline\" color=\"primary\"></ion-icon>\r\n            </ion-item>\r\n          </ion-list>\r\n        </div> -->\r\n      </div>\r\n\r\n      <!-- Lựa chọn khoảng thời gian lọc -->\r\n      <div style=\"display: flex; align-items: center; \">\r\n        <ion-list>\r\n          <ion-item>\r\n            <ion-icon slot=\"start\" name=\"calendar-clear-outline\" color=\"primary\"></ion-icon>\r\n            <ion-select aria-label=\"times\" interface=\"alert\" placeholder=\"Chọn khoảng thời gian lọc ...\"\r\n              (ionChange)=\"handleChangeFilterInterval($event)\">\r\n\r\n              <ion-select-option *ngFor=\"let time of initDatas.baoCaoDoanhSoType\" [value]=\"time.id\">\r\n                {{time.name}}\r\n              </ion-select-option>\r\n              <!-- <ion-select-option value=\"all\">\r\n                --Tất Cả--\r\n              </ion-select-option>\r\n              <ion-select-option value=\"today\">\r\n                Hôm nay\r\n              </ion-select-option>\r\n              <ion-select-option value=\"yesterday\">\r\n                Hôm qua\r\n              </ion-select-option>\r\n              <ion-select-option value=\"this_week\">\r\n                Tuần này\r\n              </ion-select-option>\r\n              <ion-select-option value=\"7_day_ago\">\r\n                7 ngày trước\r\n              </ion-select-option>\r\n              <ion-select-option value=\"this_month\">\r\n                Tháng này\r\n              </ion-select-option>\r\n              <ion-select-option value=\"30_days_ago\">\r\n                30 ngày trước\r\n              </ion-select-option>\r\n              <ion-select-option value=\"from_day_to_date\">\r\n                Từ ngày đến ngày\r\n              </ion-select-option> -->\r\n            </ion-select>\r\n\r\n          </ion-item>\r\n\r\n\r\n          <ion-item *ngIf=\"filterInterval.isShow\">\r\n            <!-- Calenda cho người dùng chọn khoảng thời gian lọc -->\r\n            <!-- <ion-datetime value=\"2022-04-21T00:00:00\" min=\"2022-03-01T00:00:00\" max=\"2022-05-31T23:59:59\"></ion-datetime> -->\r\n            <!-- <ion-datetime locale=\"vi-VI\"></ion-datetime> -->\r\n            <!-- <ion-datetime presentation=\"date-time\" [preferWheel]=\"true\"></ion-datetime> -->\r\n            <!-- <ion-datetime>\r\n  <span slot=\"title\">Select a Reservation Date</span>\r\n</ion-datetime> -->\r\n            <!-- <ion-datetime [showDefaultButtons]=\"true\" doneText=\"All set\" cancelText=\"Never mind\"> </ion-datetime> -->\r\n            <!-- <ion-datetime #datetime>\r\n  <ion-buttons slot=\"buttons\">\r\n    <ion-button color=\"danger\" (click)=\"datetime.reset()\">Reset</ion-button>\r\n    <ion-button color=\"primary\" (click)=\"datetime.cancel()\">Never mind</ion-button>\r\n    <ion-button color=\"primary\" (click)=\"datetime.confirm()\">All Set</ion-button>\r\n  </ion-buttons>\r\n</ion-datetime> -->\r\n            <span style=\"font-size: small;\">Từ ngày: </span>\r\n            <ion-datetime-button datetime=\"from-datetime\" style=\"font-size: small;\"></ion-datetime-button>\r\n\r\n            <ion-modal [keepContentsMounted]=\"true\">\r\n              <ng-template>\r\n\r\n\r\n                <ion-datetime #fromDatetime [(ngModel)]=\"this.filterInterval.pastTime\" [showDefaultTitle]=\"true\"\r\n                  [showDefaultButtons]=\"true\" locale=\"vi-VI\" id=\"from-datetime\" [showClearButton]=\"true\"\r\n                  (ionChange)=\"handleChangeFilterIntervalCustomByUser($event)\">\r\n                  <span slot=\"title\">Chọn thời gian bắt đầu</span>\r\n                </ion-datetime>\r\n              </ng-template>\r\n            </ion-modal>\r\n          </ion-item>\r\n\r\n          <ion-item *ngIf=\"filterInterval.isShow\">\r\n            <!-- Calenda cho người dùng chọn khoảng thời gian lọc -->\r\n            <!-- <ion-datetime value=\"2022-04-21T00:00:00\" min=\"2022-03-01T00:00:00\" max=\"2022-05-31T23:59:59\"></ion-datetime> -->\r\n\r\n\r\n            <!-- <ion-datetime locale=\"vn-VN\"></ion-datetime> -->\r\n\r\n            <!-- <ion-datetime presentation=\"date-time\" [preferWheel]=\"true\"></ion-datetime> -->\r\n\r\n            <!-- <ion-datetime>\r\n  <span slot=\"title\">Select a Reservation Date</span>\r\n</ion-datetime> -->\r\n            <!-- <ion-datetime [showDefaultButtons]=\"true\" doneText=\"All set\" cancelText=\"Never mind\"> </ion-datetime> -->\r\n            <!-- <ion-datetime #datetime>\r\n  <ion-buttons slot=\"buttons\">\r\n    <ion-button color=\"danger\" (click)=\"datetime.reset()\">Reset</ion-button>\r\n    <ion-button color=\"primary\" (click)=\"datetime.cancel()\">Never mind</ion-button>\r\n    <ion-button color=\"primary\" (click)=\"datetime.confirm()\">All Set</ion-button>\r\n  </ion-buttons>\r\n</ion-datetime> -->\r\n            <span style=\"font-size: small;\">Đến ngày: </span>\r\n            <ion-datetime-button style=\"font-size: small;\" datetime=\"toDatetime\"></ion-datetime-button>\r\n\r\n            <ion-modal [keepContentsMounted]=\"true\">\r\n              <ng-template>\r\n\r\n                <ion-datetime #toDatetime [(ngModel)]=\"this.filterInterval.presentTime\" [showDefaultTitle]=\"true\"\r\n                  [showDefaultButtons]=\"true\" locale=\"vi-VI\" id=\"toDatetime\" [showClearButton]=\"true\"\r\n                  [min]=\"filterInterval.pastTime\" (ionChange)=\"handleChangeFilterIntervalCustomByUser($event)\">\r\n                  <span slot=\"title\">Chọn thời gian bắt đầu</span>\r\n                  <!-- <ion-buttons slot=\"buttons\">\r\n                    <ion-button color=\"danger\" (click)=\"toDatetime.reset()\">Reset</ion-button>\r\n                    <ion-button color=\"primary\" (click)=\"toDatetime.cancel()\">Never mind</ion-button>\r\n                    <ion-button color=\"primary\" (click)=\"toDatetime.confirm()\">All Set</ion-button>\r\n                  </ion-buttons> -->\r\n                </ion-datetime>\r\n\r\n              </ng-template>\r\n            </ion-modal>\r\n          </ion-item>\r\n\r\n        </ion-list>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Nội dung -->\r\n    <div class=\"content-laboratory\">\r\n      <ion-list>\r\n\r\n        <!-- Danh các đối tác -->\r\n        <ion-item *ngFor=\"let order of listOrder; let i = index\">\r\n          <!-- Thông tin bệnh nhân -->\r\n          <ion-label>\r\n            <!-- Tên bệnh nhân -->\r\n            <h3 *ngIf=\"!(order.code | isEmpty)\" class=\"name-patient\">{{order.dateCreated| date: \"ddMMyy\"}}-{{order.code}}\r\n              {{order.patient.name}}</h3>\r\n\r\n            <!-- Số điện thoại -->\r\n            <div *ngIf=\"!(order.patient.phoneNo | isEmpty)\" class=\"info\">\r\n              <div>\r\n                <ion-icon name=\"call-outline\"></ion-icon>\r\n              </div>\r\n              <h3 class=\"text\">{{order.patient.phoneNo}}</h3>\r\n            </div>\r\n\r\n            <!-- Địa chỉ -->\r\n            <div *ngIf=\"!(order.patient.address | isEmpty)\" class=\"info\">\r\n              <div>\r\n                <ion-icon name=\"location-outline\"></ion-icon>\r\n              </div>\r\n              <h3 class=\"text address\">{{order.patient.address}}</h3>\r\n            </div>\r\n\r\n            <!-- Chỉ định -->\r\n            <div *ngIf=\"!(order.chanDoan | isEmpty)\" class=\"info\">\r\n              <div>\r\n                <ion-icon name=\"pulse-outline\"></ion-icon>\r\n              </div>\r\n              <h3 class=\"text\">{{order.chanDoan}}</h3>\r\n            </div>\r\n\r\n            <!-- Tình trạng mẫu xét nghiệm -->\r\n            <div *ngIf=\"!(order.status | isEmpty)\" class=\"status\">\r\n              <h3>{{initDatas? (order.status | orderStatus : initDatas?.orderStatus) : order.status}}</h3>\r\n            </div>\r\n          </ion-label>\r\n        </ion-item>\r\n      </ion-list>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Nút thêm mới -->\r\n  <!-- <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n    <ion-fab-button (click)=\"openModalPatientLab()\">\r\n      <ion-icon name=\"add-outline\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab> -->\r\n</ion-content>\r\n\r\n\r\n<!-- Form modal add end edit a Patient  -->\r\n\r\n<ion-modal [isOpen]=\"isModalOpenFormPatient\">\r\n  <ng-template>\r\n    <!-- Tiêu đề -->\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <!-- Nút huỷ modal -->\r\n        <ion-buttons slot=\"start\">\r\n          <ion-button (click)=\"setOpenModalAddPatient(false)\">Huỷ</ion-button>\r\n        </ion-buttons>\r\n\r\n        <!-- Tiêu đề Modal -->\r\n        <ion-title>{{titleModalAddPatient}}</ion-title>\r\n\r\n        <!-- Nút thêm mới xét nghiệm -->\r\n        <ion-buttons slot=\"end\">\r\n          <ion-button (click)=\"saveModalAddPatient()\">Lưu</ion-button>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <!-- Nội dung -->\r\n    <!-- <p>{{itemPatientFormModalLab | json}}</p> -->\r\n    <ion-content class=\"ion-padding\">\r\n      <!-- Label dẫn dắt người dùng-->\r\n      <label [innerHTML]=\"instructionModalPatient\"></label>\r\n      <!-- Khôi nhập dữ liệu -->\r\n      <div>\r\n        <!-- Nhập hình thức thanh toán-->\r\n        <!-- <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"floating\">\r\n              <ion-icon name=\"options-outline\"></ion-icon>\r\n              Loại Yêu cầu <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-select [interfaceOptions]=\"customAlertOptionsRequestType\" aria-label=\"parterns\"\r\n              placeholder=\"Chọn loại yêu cầu ...\" (ionChange)=\"handleChangeRequestType($event)\"\r\n              [(ngModel)]=\"itemPatientFormModalLab.valueRequestType\">\r\n              <ion-select-option *ngFor=\"let typeOrder of listTypeOrder\"\r\n                [value]=\"typeOrder.requestTypeId\">{{typeOrder.requestTypeName}}</ion-select-option>\r\n            </ion-select>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyRequestType\">*Loại yêu cầu không được để trống!</span>\r\n        </ion-col> -->\r\n\r\n        <!-- Nhập tên bệnh nhân -->\r\n        <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"stacked\">\r\n              <ion-icon name=\"person-outline\"></ion-icon>\r\n              Tên bệnh nhân <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-input [(ngModel)]=\"itemPatientFormModalLab.name\" type=\"text\" placeholder=\"Nhập tên bệnh nhân ...\"\r\n              (keyup)=\"onKeyUpInputNamePatient()\"></ion-input>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyFullName\">*Tên bệnh nhân không được để trống!</span>\r\n        </ion-col>\r\n\r\n        <!-- Nhập số điện thoại -->\r\n        <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"stacked\">\r\n              <ion-icon name=\"call-outline\"></ion-icon>\r\n              Số điện thoại <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-input type=\"tel\" placeholder=\"888-888-8888\" [(ngModel)]=\"itemPatientFormModalLab.phone\"\r\n              (keyup)=\"onKeyUpInputNumberPhone()\"></ion-input>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyNumberPhone\">*Số điện thoại không được để trống!</span>\r\n        </ion-col>\r\n\r\n        <!-- Nhập địa chỉ bệnh nhân -->\r\n        <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"stacked\">\r\n              <ion-icon name=\"location-outline\"></ion-icon>\r\n              Địa chỉ <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-input [(ngModel)]=\"itemPatientFormModalLab.address\" type=\"text\" (keyup)=\"onKeyUpInputAddress()\"\r\n              placeholder=\"Nhập địa chỉ ...\"></ion-input>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyAdress\">*Địa chỉ không được để trống!</span>\r\n        </ion-col>\r\n\r\n        <!-- <ion-col>\r\n          <ion-item *ngIf=\"'true'\">\r\n            <div style=\"display: flex; flex-direction: column;\">\r\n              <span>TG Lấy mấu/Thu mẫu: <span style=\"color:red\">*</span></span>\r\n              <ion-datetime-button datetime=\"time\"\r\n                style=\"margin-top: 0.5rem; margin-bottom: 0.25rem;\"></ion-datetime-button>\r\n            </div>\r\n\r\n            <ion-modal [keepContentsMounted]=\"true\">\r\n              <ng-template>\r\n                <ion-datetime [(ngModel)]=\"this.itemPatientFormModalLab.timeSample\" size=\"small\"\r\n                  [showDefaultTitle]=\"true\" [showDefaultButtons]=\"true\" locale=\"vi-VI\" id=\"time\"\r\n                  [showClearButton]=\"true\" (ionChange)=\"handleChangeTimeSample($event)\">\r\n                  <span slot=\"title\">TG Lấy mấu/Thu mẫu</span>\r\n                </ion-datetime>\r\n              </ng-template>\r\n            </ion-modal>\r\n          </ion-item>\r\n        </ion-col> -->\r\n\r\n        <!-- Nhập đối tác -->\r\n        <!-- Đối tác (ionCancel)=\"pushLog('ionCancel fired')\" (ionDismiss)=\"pushLog('ionDismiss fired')\"label=\"Floating label\" label-placement=\"floating\"-->\r\n        <!-- <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"floating\">\r\n              <ion-icon name=\"person-outline\"></ion-icon>\r\n              TT Đối tác <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-select aria-label=\"parterns\" placeholder=\"Chọn đối tác ...\" (ionChange)=\"handleChangePartner($event)\">\r\n              <ion-select-option *ngFor=\"let partner of listPartner\" [value]=\"partner.id\">{{partner.code}} -\r\n                {{partner.name}}</ion-select-option>\r\n            </ion-select>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyInfoPartner\">*TT Đối tác không được để trống!</span>\r\n        </ion-col> -->\r\n\r\n\r\n        <!-- Nhập địa chỉ Ghi chú-->\r\n        <!-- <ion-input id=\"custom-input\" label=\"Custom Counter Format\" labelPlacement=\"floating\" [counter]=\"true\"\r\n          maxlength=\"20\" [counterFormatter]=\"customCounterFormatter\"></ion-input> -->\r\n        <ion-item>\r\n          <ion-label position=\"floating\">\r\n            <ion-icon name=\"pencil-outline\"></ion-icon>\r\n            Ghi chú\r\n          </ion-label>\r\n          <ion-input [(ngModel)]=\"itemPatientFormModalLab.notes\" type=\"text\" placeholder=\"Thêm ghi chú ...\"></ion-input>\r\n        </ion-item>\r\n      </div>\r\n\r\n      <!-- Khối nút điều hướng -->\r\n      <div style=\"margin-top:1rem; display: flex; justify-content: end;\">\r\n        <!-- Tiếp tục thêm thông tin bệnh nhân cần lấy mẫu xét nghiệp -->\r\n        <ion-buttons slot=\"primary\">\r\n          <ion-button (click)=\"nextModalPatient()\">\r\n            Lưu và thêm mới ...\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </div>\r\n\r\n\r\n    </ion-content>\r\n  </ng-template>\r\n</ion-modal>\r\n"],"names":["Constant","IonModal","IsEmptyPipe","i0","ctx_r23","LaboratoryPage","constructor","photoService","popoverController","router","platform","localStorage","storage","navCtrl","pickerCtrl","actionSheetCtrl","notificationService","mainService","badgeService","appVersion","alertController","orderService","loadingCtrl","datePipe","generalService","isEmptyFullName","isEmptyNumberPhone","isEmptyAdress","subHeader","valueRequestType","name","phone","address","timeSample","transform","Date","notes","conditon","status","namePatient","phoneNoPatient","orderStatus","isShow","presentTime","pastTime","header","translucent","now","listPatientLab","onKeyUpInputNamePatient","validFormInput","isEmpty","itemPatientFormModalLab","onKeyUpInputNumberPhone","onKeyUpInputAddress","ionViewDidLoad","console","log","ionViewWillLeave","ionViewDidLeave","ionViewWillUnload","ionViewDidEnter","ionViewWillEnter","ngOnInit","getSelectedUser","then","res","userInfo","getListInitialData","payload","barcode","patient","fromDate","toDate","assignToUserId","counselors","partnerId","isSendSMS","isPrintResult","patientAge","phoneNo","keyword","pageSize","page","getListOrder","getListOrderType","showLoading","loading","create","message","duration","present","isLoading","getOrders","subscribe","listOrder","data","error","showMessage","DANGER","navigate","getListRequestType","listTypeOrder","filter","en","requestTypeCode","initDatas","JSON","parse","getItem","INIT_DATA","presentPopoverFilter","e","popoverFormFilter","event","isPopoverOpenFilter","getListPartner","listPartner","showProfile","logout","clearAll","dismiss","doRefresh","$event","setOpenModalAddPatient","isOpen","isModalOpenFormPatient","openModalPatientLab","instructionModalPatient","numberOfNewPatients","resetFormModalPatient","restartValidFormAddPatient","cancelModalAddPatient","confirmPatientModal","isName","isPhone","isAddress","saveModalAddPatient","push","stringify","item","id","patientId","code","orderDoctor","orderDate","visitCode","visiteDate","chanDoan","khoa","buong","giuong","note","details","orderTypeId","price","paymentType","sex","dob","yob","cmnd","email","momWeight","momHeightCM","ultrasoundDate","gestationalWeek","gestationalDay","pregnancyNo","fetusAmount","nt","crl","expectedDateOfBirth","requestId","lat","lng","specimenID","privateNote","discountPaymentType","extraDiscountPaymentType","bsdiscountPaymentType","paidType","utmSource","dateTakenSpecimen","addressLongitude","addressLatitude","createOrder","isValid","SUCCESS","errors","errorMessage","ret","nextModalPatient","onWillDismiss","ev","detail","role","handleChangeSearch","keywordSearch","target","value","filterInterval","handleChangeSelectOrderStatus","formFilterTestSheet","handleChangeFilterInterval","setHours","currentDay","getDay","daysToSubtract","setDate","getDate","setMonth","getMonth","handleChangeFilterIntervalCustomByUser","handleChangeRequestType","handleChangeTimeSample","onSearchByFormFilter","restartFormFilter","orderStatusSelect","pushLog","msg","cancelFormFilter","selectors","viewQuery","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}