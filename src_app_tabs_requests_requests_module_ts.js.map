{"version":3,"file":"src_app_tabs_requests_requests_module_ts.js","mappings":";;;;;;;;;;;;;;;AACA,iDAAiD;AAK1C,MAAM,eAAe;IAC1B;IAEA,CAAC;IACD,SAAS,CAAC,SAAc,EAAE,YAAiB;QACzC,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,MAAM,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC;QAC1F,OAAO,UAAU,CAAC,eAAe,CAAC;IACpC,CAAC;IAEO,OAAO,CAAC,KAAU;QACxB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACpD,OAAO,IAAI,CAAC;SACb;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9C,OAAO,IAAI,CAAC;SACb;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAChE,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;;8EA3BU,eAAe;kIAAf,eAAe;;;;;;;;;;;;;;;;;ACL5B,iDAAiD;AAK1C,MAAM,iBAAiB;IAC5B;IAEA,CAAC;IACD,SAAS,CAAC,OAAY;QACpB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YACrC,OAAO,mBAAmB,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YACpC,OAAO,+BAA+B,CAAC;SACxC;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACtC,OAAO,+BAA+B,CAAC;SACxC;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;YACxC,OAAO,+BAA+B,CAAC;SACxC;QAED,OAAO,+BAA+B,CAAC;IACzC,CAAC;IAEO,OAAO,CAAC,KAAU;QACxB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACpD,OAAO,IAAI,CAAC;SACb;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9C,OAAO,IAAI,CAAC;SACb;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAChE,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;;kFA1CU,iBAAiB;sIAAjB,iBAAiB;;;;;;;;;;;;;;;;;;ACLyB;AACR;;;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;AAMK,MAAM,yBAAyB;;kGAAzB,yBAAyB;sHAAzB,yBAAyB;0HAH1B,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,yBAAyB,oFAF1B,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;ACbqB;AAEE;AACF;AACE;AACoD;AAE7B;AACX;AAEQ;AAEI;AACJ;;AAc5D,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;oHAHlB,CAAC,qEAAU,CAAC,YAPrB,uDAAW;QACX,yDAAY;QACZ,wDAAW;QACX,wGAA+B;QAC/B,+EAAyB;QACzB,6EAAY;mIAKH,kBAAkB,mBAFd,wDAAY,EAAE,iFAAiB,EAAE,6EAAe,aAR7D,uDAAW;QACX,yDAAY;QACZ,wDAAW;QACX,wGAA+B;QAC/B,+EAAyB;QACzB,6EAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNhB;AAQA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ICiEoBG,6DAAAA;IACoCA,qDAAAA;IAA6BA,2DAAAA;;;;;IAA/DA,yDAAAA;IAAkCA,wDAAAA;IAAAA,gEAAAA;;;;;;IAiCpCA,6DAAAA;IACqBA,qDAAAA;IAAcA,2DAAAA;;;;;IAAjCA,yDAAAA;IAAmBA,wDAAAA;IAAAA,gEAAAA;;;;;;;;IAvD7BA,6DAAAA,sBAAiC,CAAjC,EAAiC,WAAjC,EAAiC,EAAjC;IACuCA,qDAAAA;IAAoBA,2DAAAA;IACzDA,6DAAAA,gBAAU,CAAV,EAAU,UAAV,EAAU,CAAV,EAAU,WAAV,EAAU,EAAV;IAYMA,wDAAAA;IACAA,qDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IACsCA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,yCAAb;IAA4C,CAA5C,EAA6C,eAA7C,EAA6C;MAAAA,4DAAAA;MAAA;MAAA,OACpEA,0DAAAA,8DADoE;IAEjG,CAFoD;IAEpCA,yDAAAA;IAEFA,2DAAAA;IAIFA,6DAAAA,qBAAoC,EAApC,EAAoC,WAApC,EAAoC,EAApC;IAEIA,wDAAAA;IACAA,qDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IACEA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,qDAAb;IAAuD,CAAvD;IAAiDA,2DAAAA;IAIrDA,6DAAAA,qBAAoC,EAApC,EAAoC,WAApC,EAAoC,EAApC;IAEIA,wDAAAA;IACAA,qDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IACEA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,qDAAb;IAAuD,CAAvD;IAAiDA,2DAAAA;IAIrDA,6DAAAA,qBAAoC,EAApC,EAAoC,WAApC,EAAoC,EAApC;IAEIA,wDAAAA;IACAA,qDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IAEoCA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,+CAAb;IAAkD,CAAlD;IAClCA,yDAAAA;IAKFA,2DAAAA;IAGJA,6DAAAA,wBAAwF,EAAxF,EAAwF,YAAxF,EAAwF,EAAxF;IAEIA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAASA,0DAAAA,4BAAT;IAA2B,CAA3B;IAA6BA,wDAAAA;IAA0CA,2DAAAA;IACzEA,6DAAAA;IACEA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAASA,0DAAAA,6BAAT;IAA4B,CAA5B;IAA8BA,wDAAAA;IAAuDA,2DAAAA;IACvFA,6DAAAA;IAAsCA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAASA,0DAAAA,gCAAT;IAA+B,CAA/B;IAAyDA,wDAAAA;IAC7CA,2DAAAA;;;;;IAnDvBA,wDAAAA;IAAAA,yDAAAA,2DAAkD,SAAlD,EAAkDC,kDAAlD;IAGkBD,wDAAAA;IAAAA,yDAAAA;IAYzCA,wDAAAA;IAAAA,yDAAAA;IAUAA,wDAAAA;IAAAA,yDAAAA;IAUAA,wDAAAA;IAAAA,yDAAAA;IAEqCA,wDAAAA;IAAAA,yDAAAA;;;;;;IA8C3CA,6DAAAA;IACEA,qDAAAA;IACFA,2DAAAA;;;;;IAFoEA,yDAAAA;IAClEA,wDAAAA;IAAAA,iEAAAA;;;;;;;;IAsDAA,6DAAAA;IAA4BA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,0CAAb;IAAiD,CAAjD,EAA0C,WAA1C,EAA0C;MAAAA,4DAAAA;MAAA;MAAA,OAEvDA,0DAAAA,wDAFuD;IAET,CAFjC;IAG1BA,6DAAAA;IAAmBA,qDAAAA;IAAsBA,2DAAAA;;;;;IAHfA,yDAAAA,6CAA0C,kBAA1C,EAA0C,IAA1C,EAA0C,oBAA1C,EAA0C,IAA1C,EAA0C,iBAA1C,EAA0C,IAA1C;;;;;;IAvBlCA,6DAAAA,gBAAwC,CAAxC,EAAwC,MAAxC,EAAwC,EAAxC;IAgBkCA,qDAAAA;IAASA,2DAAAA;IACzCA,wDAAAA;IAEAA,6DAAAA;IACEA,yDAAAA;IASFA,2DAAAA;;;;IAVWA,wDAAAA;IAAAA,yDAAAA;;;;;;;;IAuCPA,6DAAAA;IAA0BA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,6CAAb;IAAoD,CAApD,EAA6C,WAA7C,EAA6C;MAAAA,4DAAAA;MAAA;MAAA,OAExBA,0DAAAA,wDAFwB;IAEsB,CAFnE;IAGxBA,6DAAAA;IAAmBA,qDAAAA;IAAsBA,2DAAAA;;;;;IAHjBA,yDAAAA,gDAA6C,kBAA7C,EAA6C,IAA7C,EAA6C,oBAA7C,EAA6C,IAA7C,EAA6C,iBAA7C,EAA6C,IAA7C,EAA6C,KAA7C,EAA6CE,+BAA7C;;;;;;IA1BhCF,6DAAAA,gBAAwC,CAAxC,EAAwC,MAAxC,EAAwC,EAAxC;IAoBkCA,qDAAAA;IAAUA,2DAAAA;IAC1CA,wDAAAA;IAEAA,6DAAAA;IACEA,yDAAAA;IAcFA,2DAAAA;;;;IAfWA,wDAAAA;IAAAA,yDAAAA;;;;;;IAiCTA,6DAAAA,eAA2C,CAA3C,EAA2C,KAA3C;IAEIA,wDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IAAiBA,qDAAAA;;IAAuDA,2DAAAA;;;;;IAAvDA,wDAAAA;IAAAA,gEAAAA,CAAAA,0DAAAA;;;;;;IASrBA,6DAAAA,eAA2C,CAA3C,EAA2C,KAA3C;IAEIA,wDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IAAiBA,qDAAAA;IAAiBA,2DAAAA;;;;;IAAjBA,wDAAAA;IAAAA,gEAAAA;;;;;;IAInBA,6DAAAA,eAA6C,CAA7C,EAA6C,KAA7C;IAEIA,wDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IAAyBA,qDAAAA;IAAmBA,2DAAAA;;;;;IAAnBA,wDAAAA;IAAAA,gEAAAA;;;;;;IAI3BA,6DAAAA,eAA6C,CAA7C,EAA6C,KAA7C;IAEIA,wDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IAAyBA,qDAAAA;IAAmBA,2DAAAA;;;;;IAAnBA,wDAAAA;IAAAA,gEAAAA;;;;;;IAtC/BA,6DAAAA,gBAA6D,CAA7D,EAA6D,WAA7D,EAA6D,CAA7D,EAA6D,KAA7D,EAA6D,EAA7D;IAKMA,yDAAAA;IAOAA,6DAAAA,eAA0B,CAA1B,EAA0B,IAA1B;IACMA,qDAAAA;;IAA2DA,2DAAAA;IAKnEA,yDAAAA;IAQAA,yDAAAA;IAQAA,yDAAAA;IAQAA,6DAAAA,gBAAoB,EAApB,EAAoB,IAApB;IAGMA,qDAAAA;;IAA+BA,2DAAAA;;;;;;IAxC7BA,wDAAAA;IAAAA,yDAAAA;IAQAA,wDAAAA;IAAAA,gEAAAA,CAAAA,0DAAAA;IAKFA,wDAAAA;IAAAA,yDAAAA;IAQAA,wDAAAA;IAAAA,yDAAAA;IAQAA,wDAAAA;IAAAA,yDAAAA;IAWAA,wDAAAA;IAAAA,gEAAAA,CAAAA,0DAAAA;;;;;;IAyDJA,6DAAAA;IACoCA,qDAAAA;IAA6BA,2DAAAA;;;;;IAA/DA,yDAAAA;IAAkCA,wDAAAA;IAAAA,gEAAAA;;;;;;IAGxCA,6DAAAA;IAAgEA,qDAAAA;IAAkCA,2DAAAA;;;;;;IA0BlGA,6DAAAA;IAAgEA,qDAAAA;IAAmCA,2DAAAA;;;;;;IAanGA,6DAAAA;IAA2DA,qDAAAA;IAA6BA,2DAAAA;;;;;;;;IAclFA,6DAAAA;IAAcA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,qDAAb;IAA4D,CAA5D,EAAqD,WAArD,EAAqD;MAAAA,4DAAAA;MAAA;MAAA,OAE3BA,0DAAAA,wCAF2B;IAEG,CAFxD;IAGZA,6DAAAA;IAAmBA,qDAAAA;IAAkBA,2DAAAA;;;;;IAHzBA,yDAAAA,wDAAqD,kBAArD,EAAqD,IAArD,EAAqD,oBAArD,EAAqD,IAArD,EAAqD,iBAArD,EAAqD,IAArD;;;;;;IAVpBA,6DAAAA,gBAAyB,CAAzB,EAAyB,KAAzB,EAAyB,EAAzB,EAAyB,CAAzB,EAAyB,MAAzB;IAEUA,qDAAAA;IAAoBA,6DAAAA;IAAwBA,qDAAAA;IAACA,2DAAAA;IACnDA,wDAAAA;IAEFA,2DAAAA;IAEAA,6DAAAA;IACEA,yDAAAA;IAQFA,2DAAAA;;;;IATWA,wDAAAA;IAAAA,yDAAAA;;;;;;;;IAzFnBA,6DAAAA,kBAAY,CAAZ,EAAY,aAAZ,EAAY,CAAZ,EAAY,aAAZ,EAAY,EAAZ,EAAY,CAAZ,EAAY,YAAZ,EAAY,EAAZ;IAIkBA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAASA,0DAAAA,gCAAuB,KAAvB,EAAT;IAAsC,CAAtC;IAAwCA,qDAAAA;IAAGA,2DAAAA;IAIzDA,6DAAAA;IAAWA,qDAAAA;IAAwBA,2DAAAA;IAGnCA,6DAAAA,uBAAwB,CAAxB,EAAwB,YAAxB,EAAwB,EAAxB;IACcA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAASA,0DAAAA,+BAAT;IAA8B,CAA9B;IAAgCA,qDAAAA;IAAGA,2DAAAA;IAOrDA,6DAAAA;IAEEA,wDAAAA;IAEAA,6DAAAA,YAAK,EAAL,EAAK,SAAL,EAAK,EAAL,EAAK,UAAL,EAAK,EAAL,EAAK,WAAL,EAAK,EAAL;IAMQA,wDAAAA;IACAA,qDAAAA;IAAaA,6DAAAA;IAAwBA,qDAAAA;IAACA,2DAAAA;IAExCA,6DAAAA;IACsCA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,yCAAb;IAA4C,CAA5C,EAA6C,eAA7C,EAA6C;MAAAA,4DAAAA;MAAA;MAAA,OACpEA,0DAAAA,2DADoE;IAE3F,CAF8C;IAEpCA,yDAAAA;IAEFA,2DAAAA;IAEFA,yDAAAA;IACFA,2DAAAA;IAgBAA,6DAAAA,gBAAS,EAAT,EAAS,UAAT,EAAS,EAAT,EAAS,WAAT,EAAS,EAAT;IAGMA,wDAAAA;IACAA,qDAAAA;IAAcA,6DAAAA;IAAwBA,qDAAAA;IAACA,2DAAAA;IAEzCA,6DAAAA;IAAiDA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,gDAAb;IACxD,CADwD,EAA2C,OAA3C,EAA2C;MAAAA,4DAAAA;MAAA;MAAA,OACjFA,0DAAAA,mCADiF;IACxD,CADa;IACXA,2DAAAA;IAExCA,yDAAAA;IACFA,2DAAAA;IAGAA,6DAAAA,gBAAS,EAAT,EAAS,UAAT,EAAS,EAAT,EAAS,WAAT,EAAS,EAAT;IAGMA,wDAAAA;IACAA,qDAAAA;IAAQA,6DAAAA;IAAwBA,qDAAAA;IAACA,2DAAAA;IAEnCA,6DAAAA;IAAWA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,kDAAb;IAAoD,CAApD,EAA6C,OAA7C,EAA6C;MAAAA,4DAAAA;MAAA;MAAA,OAAsBA,0DAAAA,+BAAtB;IAA2C,CAAxF;IACsBA,2DAAAA;IAEnCA,yDAAAA;IACFA,2DAAAA;IAEAA,6DAAAA;IACEA,yDAAAA;IAkBFA,2DAAAA;IAsBAA,6DAAAA,iBAAU,EAAV,EAAU,WAAV,EAAU,EAAV;IAEIA,wDAAAA;IACAA,qDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IAAWA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAAaA,0DAAAA,gDAAb;IAAkD,CAAlD;IAAuFA,2DAAAA;;;;;IAvHzFA,wDAAAA;IAAAA,gEAAAA;IAaNA,wDAAAA;IAAAA,yDAAAA,8CAAAA,6DAAAA;IAWWA,wDAAAA;IAAAA,yDAAAA,2DAAkD,SAAlD,EAAkDG,+CAAlD;IAG+BH,wDAAAA;IAAAA,yDAAAA;IAItBA,wDAAAA;IAAAA,yDAAAA;IAuB4BA,wDAAAA;IAAAA,yDAAAA;IAG5BA,wDAAAA;IAAAA,yDAAAA;IAUVA,wDAAAA;IAAAA,yDAAAA;IAGUA,wDAAAA;IAAAA,yDAAAA;IAIZA,wDAAAA;IAAAA,yDAAAA;IA6CAA,wDAAAA;IAAAA,yDAAAA;;;;AD7bf,MAAOI,YAAP,CAAmB;EA6GvBC,YAAmBC,YAAnB,EACUC,iBADV,EAEUC,MAFV,EAGUC,QAHV,EAIUC,YAJV,EAKUC,OALV,EAMSC,OANT,EAOUC,UAPV,EAQUC,eARV,EASUC,mBATV,EAUUC,WAVV,EAWSC,YAXT,EAYUC,UAZV,EAaUC,eAbV,EAcUC,YAdV,EAeUC,WAfV,EAgBUC,QAhBV,EAiBUC,cAjBV,EAiBwC;IAjBrB;IACT;IACA;IACA;IACA;IACA;IACD;IACC;IACA;IACA;IACA;IACD;IACC;IACA;IACA;IACA;IACA;IACA;IAvHV,2BAAsB,KAAtB;IAIA,4BAAuB,cAAvB;IACA,+BAA0B,gCAA1B;IACA,2BAAsB,CAAtB;IACA,8BAAyB,KAAzB;IAGA,sBAAiB;MACfC,kBAAkB,EAAE,KADL;MAEf;MACAC,kBAAkB,EAAE,KAHL;MAIfC,aAAa,EAAE,KAJA;MAKfC,iBAAiB,EAAE;IALJ,CAAjB;IAUA,4BAAuB;MACrB;MACAC,SAAS,EAAE,kCAFU,CAGrB;;IAHqB,CAAvB;IAMA,+BAA0B;MACxBC,gBAAgB,EAAE,CADM;MAExBC,IAAI,EAAE,EAFkB;MAGxBC,KAAK,EAAE,EAHiB;MAIxBC,OAAO,EAAE,EAJe;MAKxBC,UAAU,EAAE,KAAKX,QAAL,CAAcY,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,qBAApC,CALY;MAMxBC,KAAK,EAAE;IANiB,CAA1B;IASA,sBAAiB,CACf;MACEN,IAAI,EAAE,sBADR;MAEEC,KAAK,EAAE,YAFT;MAGEC,OAAO,EAAE,6CAHX;MAIEK,QAAQ,EAAE,2BAJZ;MAKEC,MAAM,EAAE,mBALV;MAMEF,KAAK,EAAE;IANT,CADe,EAUf;MACEN,IAAI,EAAE,yBADR;MAEEC,KAAK,EAAE,YAFT;MAGEC,OAAO,EAAE,sCAHX;MAIEK,QAAQ,EAAE,gBAJZ;MAKEC,MAAM,EAAE,+BALV;MAMEF,KAAK,EAAE;IANT,CAVe,EAmBf;MACEN,IAAI,EAAE,0BADR;MAEEC,KAAK,EAAE,YAFT;MAGEC,OAAO,EAAE,oCAHX;MAIEK,QAAQ,EAAE,YAJZ;MAKEC,MAAM,EAAE,gBALV;MAMEF,KAAK,EAAE;IANT,CAnBe,CAAjB,CAoFwC,CApDxC;;IACA,iBAAmB,EAAnB,CAmDwC,CAjDxC;;IACA,mBAAqB,EAArB,CAgDwC,CA9CxC;;IACA,mBAAc,EAAd,CA6CwC,CA3CxC;;IACA,qBAAgB,EAAhB,CA0CwC,CAxCxC;;IACA,2BAAsB;MACpBG,uBAAuB,EAAE,CADL;MAEpBC,WAAW,EAAE,EAFO;MAGpBC,cAAc,EAAE,EAHI;MAIpBC,cAAc,EAAE,EAJI;MAKpBC,WAAW,EAAE;IALO,CAAtB;IAQA,sBAAiB;MACfC,MAAM,EAAE,KADO;MAEfC,WAAW,EAAE,EAFE;MAGfC,QAAQ,EAAE;IAHK,CAAjB;IAMA,qCAAgC;MAC9BC,MAAM,EAAE,mBADsB;MAE9B;MACA;MACAC,WAAW,EAAE;IAJiB,CAAhC;IA2BE,KAAKC,GAAL,GAAW,IAAId,IAAJ,EAAX;IAGA,KAAKe,cAAL,GAAsB,CACpB;MACEpB,IAAI,EAAE,sBADR;MAEEC,KAAK,EAAE,YAFT;MAGEC,OAAO,EAAE,6CAHX;MAIEK,QAAQ,EAAE,2BAJZ;MAKEC,MAAM,EAAE,mBALV;MAMEF,KAAK,EAAE;IANT,CADoB,EAUpB;MACEN,IAAI,EAAE,yBADR;MAEEC,KAAK,EAAE,YAFT;MAGEC,OAAO,EAAE,sCAHX;MAIEK,QAAQ,EAAE,gBAJZ;MAKEC,MAAM,EAAE,+BALV;MAMEF,KAAK,EAAE;IANT,CAVoB,EAmBpB;MACEN,IAAI,EAAE,0BADR;MAEEC,KAAK,EAAE,YAFT;MAGEC,OAAO,EAAE,oCAHX;MAIEK,QAAQ,EAAE,YAJZ;MAKEC,MAAM,EAAE,gBALV;MAMEF,KAAK,EAAE;IANT,CAnBoB,CAAtB;EA4BD;;EAGDe,uBAAuB,IACrB;IACA;EACD;;EAEDC,uBAAuB;IACrB;IACA,KAAKC,cAAL,CAAoB5B,kBAApB,GAAyC,KAAK6B,OAAL,CAAa,KAAKC,uBAAL,CAA6BxB,KAA1C,CAAzC;EACD;;EAGDyB,mBAAmB;IACjB;IACA,KAAKH,cAAL,CAAoB3B,aAApB,GAAoC,KAAK4B,OAAL,CAAa,KAAKC,uBAAL,CAA6BvB,OAA1C,CAApC;EACD;;EAEDyB,cAAc,IACZ;EACD;;EAEDC,gBAAgB,IACd;EACD;;EAEDC,eAAe,IACb;EACD;;EAEDC,iBAAiB,IACf;EACD;;EAEDC,eAAe,IACb;EACD;;EAEKC,gBAAgB,IACpB;;IADoB;EAIrB;;EAEKC,QAAQ;IAAA;;IAAA;MACZ;MACA,KAAI,CAACrD,YAAL,CAAkBsD,eAAlB,GAAoCC,IAApC,CAA0CC,GAAD,IAAQ;QAC/C,KAAI,CAACC,QAAL,GAAgBD,GAAhB;MACD,CAFD,EAFY,CAMZ;;;MACA,MAAM,KAAI,CAACE,kBAAL,EAAN,CAPY,CAUZ;MACA;MAEA;;MACA,MAAMC,OAAO,GAAG;QACdC,IAAI,EAAE,CADQ;QAEdC,QAAQ,EAAE,GAFI;QAGdC,UAAU,EAAE,IAHE;QAIdC,QAAQ,EAAE,IAJI;QAKdC,MAAM,EAAE,IALM;QAMd3C,KAAK,EAAE,IANO;QAOd4C,SAAS,EAAE,IAPG;QAQdC,aAAa,EAAE,IARD;QASdC,MAAM,EAAE,IATM;QAUdC,OAAO,EAAE,IAVK;QAWdC,WAAW,EAAE,IAXC;QAYdC,OAAO,EAAE,IAZK;QAadC,QAAQ,EAAE,IAbI;QAcdC,aAAa,EAAE,IAdD;QAedC,WAAW,EAAE,IAfC;QAgBdC,QAAQ,EAAE;MAhBI,CAAhB;MAkBA,MAAM,KAAI,CAACC,uBAAL,CAA6BhB,OAA7B,EAAsC,IAAtC,CAAN,CAhCY,CAkCZ;;MACA,MAAM,KAAI,CAACiB,gBAAL,EAAN,CAnCY,CAsCZ;MACA;IAvCY;EAwCb;;EAEKC,WAAW;IAAA;;IAAA;MACf,MAAMC,OAAO,SAAS,MAAI,CAACnE,WAAL,CAAiBoE,MAAjB,CAAwB;QAC5CC,OAAO,EAAE,0BADmC;QAE5CC,QAAQ,EAAE;MAFkC,CAAxB,CAAtB;MAKAH,OAAO,CAACI,OAAR;IANe;EAOhB;;EAEDC,YAAY;IACV;IACA,KAAKN,WAAL;IAEA,MAAMlB,OAAO,GAAG;MACdyB,OAAO,EAAE,EADK;MAEdC,OAAO,EAAE,EAFK;MAGdzD,MAAM,EAAE,CAHM;MAIdmC,QAAQ,EAAE,EAJI;MAKdC,MAAM,EAAE,EALM;MAMdsB,cAAc,EAAE,CANF;MAOdC,UAAU,EAAE,IAPE;MAQdtB,SAAS,EAAE,CARG;MASduB,SAAS,EAAE,IATG;MAUdC,aAAa,EAAE,IAVD;MAWdC,UAAU,EAAE,IAXE;MAYdC,OAAO,EAAE,IAZK;MAadC,OAAO,EAAE,EAbK;MAcd/B,QAAQ,EAAE,EAdI;MAedD,IAAI,EAAE;IAfQ,CAAhB;IAiBA,KAAKlD,YAAL,CAAkBmF,SAAlB,CAA4BlC,OAA5B,EAAqCmC,SAArC,CACGtC,GAAD,IAAQ;MACN,IAAIA,GAAG,IAAI,IAAX,EAAiB;QACf,KAAKuC,SAAL,GAAiBvC,GAAG,CAACwC,IAArB,CADe,CAEf;MACD;IACF,CANH,EAOGC,KAAD,IAAU;MACR,IAAIA,KAAK,CAACrE,MAAN,KAAiB,GAArB,EAA0B;QACxB,KAAKvB,mBAAL,CAAyB6F,WAAzB,CAAqC/G,6EAArC,EAAsD,8BAAtD;QACA,KAAKW,MAAL,CAAYsG,QAAZ,CAAqB,CAAC,QAAD,CAArB;MACD,CAHD,MAGO;QACL,KAAK/F,mBAAL,CAAyB6F,WAAzB,CAAqC/G,6EAArC,EAAsD,iCAAtD;MACD;IACF,CAdH;EAgBD;;EAEDyF,gBAAgB;IACd,KAAK/D,cAAL,CAAoBwF,kBAApB,GAAyCP,SAAzC,CACGtC,GAAD,IAAQ;MACN,IAAIA,GAAG,KAAK,IAAZ,EAAkB;QAChB;QACA,KAAK8C,aAAL,GAAqB9C,GAAG,CAAC+C,MAAJ,CAAWC,EAAE,IAAIA,EAAE,CAACC,eAAH,KAAuB,IAAvB,IAA+BD,EAAE,CAACC,eAAH,KAAuB,IAAvE,CAArB;MACD;IACF,CANH,EAOGR,KAAD,IAAU,CACT,CARH;EAUD;;EAEDtB,uBAAuB,CAAChB,OAAD,EAAe+C,SAAf,EAAiC;IACtD;IACA,IAAIA,SAAJ,EAAe;MACb,KAAK7B,WAAL;IACD;;IAED,KAAKhE,cAAL,CAAoB8F,UAApB,CAA+BhD,OAA/B,EAAwCmC,SAAxC,CACGtC,GAAD,IAAa;MACX,IAAIA,GAAG,IAAI,IAAX,EAAiB;QACf,KAAKoD,WAAL,GAAmBpD,GAAG,CAACwC,IAAvB,CADe,CAEf;MACD;IACF,CANH,EAOGC,KAAD,IAAU;MACR,IAAIA,KAAK,CAACrE,MAAN,KAAiB,GAArB,EAA0B;QACxB,KAAKvB,mBAAL,CAAyB6F,WAAzB,CAAqC/G,6EAArC,EAAsD,8BAAtD;QACA,KAAKW,MAAL,CAAYsG,QAAZ,CAAqB,CAAC,QAAD,CAArB;MACD,CAHD,MAGO;QACL,KAAK/F,mBAAL,CAAyB6F,WAAzB,CAAqC/G,6EAArC,EAAsD,iCAAtD;MACD;IACF,CAdH;EAgBD;;EAEDuE,kBAAkB;IAChB,KAAKmD,SAAL,GAAiBC,IAAI,CAACC,KAAL,CAAW/G,YAAY,CAACgH,OAAb,CAAqB7H,gFAArB,CAAX,CAAjB;EACD;;EAED+H,oBAAoB,CAACC,CAAD,EAAS;IAC3B,KAAKC,iBAAL,CAAuBC,KAAvB,GAA+BF,CAA/B;IACA,KAAKG,mBAAL,GAA2B,IAA3B;EACD;;EAEDC,cAAc;IACZ,KAAK1G,cAAL,CAAoB0G,cAApB,GAAqCzB,SAArC,CACGtC,GAAD,IAAQ;MACN,KAAKgE,WAAL,GAAmBhE,GAAnB;IACD,CAHH,EAIGyC,KAAD,IAAU,CAAI,CAJhB;EAMD;;EAEDwB,WAAW,IAEV;;EAEDC,MAAM;IACJ,KAAK1H,YAAL,CAAkB2H,QAAlB;IACA,KAAK9H,iBAAL,CAAuB+H,OAAvB;IACA,KAAK9H,MAAL,CAAYsG,QAAZ,CAAqB,CAAC,GAAD,CAArB;EACD;;EAEDyB,SAAS,CAACC,MAAD,EAAO,CAEf;;EAGDC,sBAAsB,CAACC,MAAD,EAAgB;IACpC,KAAKC,sBAAL,GAA8BD,MAA9B;EACD;;EAEDE,mBAAmB;IACjB;IACA,KAAKC,uBAAL,GAA+B,mCAA/B;IACA,KAAKC,mBAAL,GAA2B,CAA3B;IAEA,KAAKC,qBAAL;IACA,KAAKC,0BAAL;IACA,KAAKP,sBAAL,CAA4B,IAA5B;EACD;;EAEDO,0BAA0B;IACxB,KAAK3F,cAAL,CAAoB3B,aAApB,GAAoC,KAApC,CADwB,CAExB;;IACA,KAAK2B,cAAL,CAAoB5B,kBAApB,GAAyC,KAAzC;IACA,KAAK4B,cAAL,CAAoB7B,kBAApB,GAAyC,KAAzC;EAED;;EAEDyH,qBAAqB;IACnB,KAAKR,sBAAL,CAA4B,KAA5B,EADmB,CAEnB;EACD;;EAGDS,mBAAmB;IACjB;IACA;IAEA,MAAMC,OAAO,GAAG,CAAC,KAAK7F,OAAL,CAAa,KAAKC,uBAAL,CAA6BxB,KAA1C,CAAjB;IACA,KAAKsB,cAAL,CAAoB5B,kBAApB,GAAyC,CAAC0H,OAA1C;IAGA,MAAMC,SAAS,GAAG,CAAC,KAAK9F,OAAL,CAAa,KAAKC,uBAAL,CAA6BvB,OAA1C,CAAnB;IACA,KAAKqB,cAAL,CAAoB3B,aAApB,GAAoC,CAAC0H,SAArC;IAGA,MAAMC,SAAS,GAAG,EAAE,KAAK9F,uBAAL,CAA6B1B,gBAA7B,KAAkD,CAApD,CAAlB;IACA,KAAKwB,cAAL,CAAoB7B,kBAApB,GAAyC,CAAC6H,SAA1C;IAEA,MAAMC,YAAY,GAAG,CAAC,KAAKhG,OAAL,CAAa,KAAKC,uBAAL,CAA6BtB,UAA1C,CAAtB;IACA,KAAKoB,cAAL,CAAoB1B,iBAApB,GAAwC,CAAC2H,YAAzC;IAEA,OAAQD,SAAS,IAAIF,OAAb,IAAwBC,SAAxB,IAAqCE,YAA7C;EACD;;EAEDC,mBAAmB;IACjB,IAAI,KAAKL,mBAAL,EAAJ,EAAgC;MAC9B;MACA,KAAKhG,cAAL,CAAoBsG,IAApB,CAAyBhC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACiC,SAAL,CAAe,KAAKlG,uBAApB,CAAX,CAAzB;MAEA,MAAMmG,UAAU,GAAG,CAAnB;MACA,MAAMC,IAAI,GAAG;QACXhF,SAAS,EAAE+E,UADA;QAEXE,MAAM,EAAE,KAAKzF,QAAL,CAAc0F,EAFX;QAGXC,WAAW,EAAE,IAHF;QAIXC,eAAe,EAAE,KAAKxG,uBAAL,CAA6BtB,UAJnC;QAKX+H,WAAW,EAAE,IALF;QAMXC,UAAU,EAAE,IAND;QAOXC,YAAY,EAAE,IAPH;QAQXC,cAAc,EAAE,IARL;QASXC,uBAAuB,EAAE,IATd;QAUXC,2BAA2B,EAAE,IAVlB;QAWXC,wBAAwB,EAAE,IAXf;QAYXtI,OAAO,EAAE,KAAKuB,uBAAL,CAA6BvB,OAZ3B;QAaXD,KAAK,EAAE,KAAKwB,uBAAL,CAA6BxB,KAbzB;QAcXmD,aAAa,EAAE,KAAK3B,uBAAL,CAA6B1B,gBAdjC;QAeX0I,eAAe,EAAE,IAfN;QAgBXC,OAAO,EAAE,KAAKjH,uBAAL,CAA6BnB,KAhB3B;QAiBXwC,aAAa,EAAE;MAjBJ,CAAb;MAmBA,KAAKrD,cAAL,CAAoBkJ,UAApB,CAA+Bd,IAA/B,EAAqCnD,SAArC,CAAgDtC,GAAD,IAAa;QAC1D,IAAIA,GAAG,CAACwG,GAAJ,IAAWxG,GAAG,CAACwG,GAAJ,CAAQ,CAAR,EAAWC,IAAX,KAAoB,CAAnC,EAAsC;UACpC,KAAK5J,mBAAL,CAAyB6F,WAAzB,CAAqC/G,6EAArC,EAAsDqE,GAAG,CAACwG,GAAJ,CAAQ,CAAR,EAAWhF,OAAjE;QACD,CAFD,MAEO;UACL;UACA,KAAK3E,mBAAL,CAAyB6F,WAAzB,CAAqC/G,8EAArC,EAAuD,yBAAvD;UACA,KAAK4I,sBAAL,CAA4B,KAA5B;QACD;MACF,CARD;IASD,CAjCD,MAiCO;MACL,KAAK1H,mBAAL,CAAyB6F,WAAzB,CAAqC/G,6EAArC,EAAsD,qCAAtD;IACD;EAEF;;EAGDgL,gBAAgB;IACd,IAAI,KAAK3B,mBAAL,EAAJ,EAAgC;MAC9B;MACA,KAAKhG,cAAL,CAAoBsG,IAApB,CAAyBhC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACiC,SAAL,CAAe,KAAKlG,uBAApB,CAAX,CAAzB,EAF8B,CAI9B;;MACA,KAAKuF,mBAAL,GAL8B,CAO9B;;MACA,KAAKD,uBAAL,GAA+B,mBAAmB,KAAKC,mBAAmB,8DAA1E,CAR8B,CAU9B;;MACA,KAAKC,qBAAL;IACD;;IAAA;EAEF;;EAED+B,aAAa,CAAC/C,KAAD,EAAa;IACxB,MAAMgD,EAAE,GAAGhD,KAAX;;IACA,IAAIgD,EAAE,CAACC,MAAH,CAAUC,IAAV,KAAmB,SAAvB,EAAkC,CAEjC,CAFD,MAEO,IAAIF,EAAE,CAACC,MAAH,CAAUC,IAAV,KAAmB,MAAvB,EAA+B,CAErC;EAEF;;EAEDlC,qBAAqB;IACnB,KAAKxF,uBAAL,GAA+B;MAC7B1B,gBAAgB,EAAE,CADW;MAE7BC,IAAI,EAAE,EAFuB;MAG7BC,KAAK,EAAE,EAHsB;MAI7BC,OAAO,EAAE,EAJoB;MAK7BC,UAAU,EAAE,KAAKX,QAAL,CAAcY,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,qBAApC,CALiB;MAM7BC,KAAK,EAAE;IANsB,CAA/B;EAQD;;EAGK8I,kBAAkB,CAACnD,KAAD,EAAW;IAAA;;IAAA;MACjC,MAAI,CAACoD,aAAL,GAAqBpD,KAAK,CAACqD,MAAN,CAAaC,KAAlC;MAGA,MAAMhH,OAAO,GAAG;QACdC,IAAI,EAAE,CADQ;QAEdC,QAAQ,EAAE,GAFI;QAGdC,UAAU,EAAE,MAAI,CAAC2G,aAHH;QAId1G,QAAQ,EAAE,MAAI,CAAC6G,cAAL,CAAoBxI,QAJhB;QAKd4B,MAAM,EAAE,MAAI,CAAC4G,cAAL,CAAoBzI,WALd;QAMdd,KAAK,EAAE,IANO;QAOd4C,SAAS,EAAE,IAPG;QAQdC,aAAa,EAAE,IARD;QASdC,MAAM,EAAE,IATM;QAUdC,OAAO,EAAE,IAVK;QAWdC,WAAW,EAAE,IAXC;QAYdC,OAAO,EAAE,IAZK;QAadC,QAAQ,EAAE,IAbI;QAcdC,aAAa,EAAE,IAdD;QAedC,WAAW,EAAE,IAfC;QAgBdC,QAAQ,EAAE;MAhBI,CAAhB;;MAmBA,MAAI,CAACC,uBAAL,CAA6BhB,OAA7B,EAAsC,KAAtC;IAvBiC;EAyBlC;;EAGKkH,6BAA6B,CAACxD,KAAD,EAAW;IAAA;;IAAA;MAC5C,MAAI,CAACyD,mBAAL,CAAyB7I,WAAzB,GAAuCoF,KAAK,CAACqD,MAAN,CAAaC,KAApD;IAD4C;EAE7C;;EAGDI,0BAA0B,CAAC1D,KAAD,EAAW;IACnC,MAAMsD,KAAK,GAAGtD,KAAK,CAACqD,MAAN,CAAaC,KAA3B,CADmC,CAEnC;;IACA,MAAMvI,QAAQ,GAAG,IAAIX,IAAJ,EAAjB;IACA,MAAMU,WAAW,GAAG,IAAIV,IAAJ,EAApB;IAEAW,QAAQ,CAAC4I,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EANmC,CAQnC;;IACA,MAAMC,UAAU,GAAG9I,WAAW,CAAC+I,MAAZ,EAAnB,CATmC,CAUnC;;IACA,IAAIC,cAAJ;;IACA,QAAQR,KAAR;MACE,KAAK,CAAL;QACE,KAAKC,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B;QACAiJ,cAAc,GAAG,CAAjB;QACA/I,QAAQ,CAACgJ,OAAT,CAAiBhJ,QAAQ,CAACiJ,OAAT,KAAqBF,cAAtC,EAHF,CAIE;;QACA;;MACF,KAAK,CAAL;QACE;QACA,KAAKP,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B;QACAiJ,cAAc,GAAG,CAAjB;QACA/I,QAAQ,CAACgJ,OAAT,CAAiBhJ,QAAQ,CAACiJ,OAAT,KAAqBF,cAAtC,EAJF,CAKE;;QACA;;MACF,KAAK,CAAL;QACE;QACA,KAAKP,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B;QACAiJ,cAAc,GAAG,CAAjB;QACA/I,QAAQ,CAACgJ,OAAT,CAAiBhJ,QAAQ,CAACiJ,OAAT,KAAqBF,cAAtC,EAJF,CAKE;;QACA;;MACF,KAAK,CAAL;QACE;QACA,KAAKP,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B;QACAiJ,cAAc,GAAG,EAAjB;QACA/I,QAAQ,CAACgJ,OAAT,CAAiBhJ,QAAQ,CAACiJ,OAAT,KAAqBF,cAAtC,EAJF,CAKE;;QACA;;MACF,KAAK,CAAL;QACE;QACA,KAAKP,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B;QACAiJ,cAAc,GAAG,EAAjB;QACA/I,QAAQ,CAACgJ,OAAT,CAAiBhJ,QAAQ,CAACiJ,OAAT,KAAqBF,cAAtC,EAJF,CAKE;;QACA;;MACF,KAAK,CAAL;QACE;QACA,KAAKP,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B;QAEAiJ,cAAc,GAAGF,UAAU,KAAK,CAAf,GAAmB,CAAnB,GAAuBA,UAAU,GAAG,CAArD;QACA7I,QAAQ,CAACgJ,OAAT,CAAiBhJ,QAAQ,CAACiJ,OAAT,KAAqBF,cAAtC,EALF,CAME;;QACA;;MACF,KAAK,CAAL;QACE;QACA,KAAKP,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B;QAEAiJ,cAAc,GAAGF,UAAU,GAAG,CAAb,GAAiB,CAAlC,CAJF,CAKE;;QACA7I,QAAQ,CAACgJ,OAAT,CAAiBhJ,QAAQ,CAACiJ,OAAT,KAAqBF,cAAtC,EANF,CAOE;;QACA;;MACF,KAAK,CAAL;QACE;QACA,KAAKP,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B;QAEAE,QAAQ,CAACgJ,OAAT,CAAiB,CAAjB,EAJF,CAKE;;QACA;;MACF,KAAK,CAAL;QACE;QACA,KAAKR,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B,CAFF,CAIE;;QACAE,QAAQ,CAACgJ,OAAT,CAAiB,CAAjB,EALF,CAOE;;QACAhJ,QAAQ,CAACkJ,QAAT,CAAkBlJ,QAAQ,CAACmJ,QAAT,KAAsB,CAAxC,EARF,CAUE;;QACA;;MACF,KAAK,EAAL;QACE;QACA,KAAKX,cAAL,CAAoB1I,MAApB,GAA6B,IAA7B;QACA;;MACF;QACE,KAAK0I,cAAL,CAAoB1I,MAApB,GAA6B,KAA7B;QACA;IA7EJ,CAZmC,CA2FnC;;;IACA,IAAIyI,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA3B,EAA+B;MAC7B;MACA,KAAKC,cAAL,CAAoBxI,QAApB,GAA+B,KAAKxB,QAAL,CAAcY,SAAd,CAAwBY,QAAxB,EAAkC,qBAAlC,CAA/B,CAF6B,CAI7B;;MACA,KAAKwI,cAAL,CAAoBzI,WAApB,GAAkC,KAAKvB,QAAL,CAAcY,SAAd,CAAwBW,WAAxB,EAAqC,qBAArC,CAAlC;IACD,CAND,MAMO;MACL;MACA,KAAKyI,cAAL,CAAoBxI,QAApB,GAA+B,EAA/B,CAFK,CAGL;MACA;;MACA,KAAKwI,cAAL,CAAoBzI,WAApB,GAAkC,EAAlC;IACD;;IAED,MAAMwB,OAAO,GAAG;MACdC,IAAI,EAAE,CADQ;MAEdC,QAAQ,EAAE,GAFI;MAGdC,UAAU,EAAE,KAAK2G,aAHH;MAId1G,QAAQ,EAAE,KAAK6G,cAAL,CAAoBxI,QAJhB;MAKd4B,MAAM,EAAE,KAAK4G,cAAL,CAAoBzI,WALd;MAMdd,KAAK,EAAE,IANO;MAOd4C,SAAS,EAAE,IAPG;MAQdC,aAAa,EAAE,IARD;MASdC,MAAM,EAAE,IATM;MAUdC,OAAO,EAAE,IAVK;MAWdC,WAAW,EAAE,IAXC;MAYdC,OAAO,EAAE,IAZK;MAadC,QAAQ,EAAE,IAbI;MAcdC,aAAa,EAAE,IAdD;MAedC,WAAW,EAAE,IAfC;MAgBdC,QAAQ,EAAE;IAhBI,CAAhB;IAmBA,KAAKC,uBAAL,CAA6BhB,OAA7B,EAAsC,IAAtC;EACD;;EAEK6H,sCAAsC,CAACnE,KAAD,EAAW;IAAA;;IAAA;MACrD;MACA,MAAMjF,QAAQ,GAAG,MAAI,CAACwI,cAAL,CAAoBxI,QAArC,CAFqD,CAGrD;;MACA,MAAMD,WAAW,GAAG,MAAI,CAACyI,cAAL,CAAoBzI,WAAxC,CAJqD,CAKrD;;MAEA,MAAMwB,OAAO,GAAG;QACdC,IAAI,EAAE,CADQ;QAEdC,QAAQ,EAAE,GAFI;QAGdC,UAAU,EAAE,MAAI,CAACgH,mBAAL,CAAyBhJ,WAHvB;QAIdiC,QAAQ,EAAE3B,QAJI;QAKd4B,MAAM,EAAE7B,WALM;QAMdd,KAAK,EAAE,IANO;QAOd4C,SAAS,EAAE,IAPG;QAQdC,aAAa,EAAE,IARD;QASdC,MAAM,EAAE,IATM;QAUdC,OAAO,EAAE,IAVK;QAWdC,WAAW,EAAE,IAXC;QAYdC,OAAO,EAAE,IAZK;QAadC,QAAQ,EAAE,IAbI;QAcdC,aAAa,EAAE,IAdD;QAedC,WAAW,EAAE,IAfC;QAgBdC,QAAQ,EAAE;MAhBI,CAAhB;;MAmBA,MAAI,CAACC,uBAAL,CAA6BhB,OAA7B,EAAsC,KAAtC;IA1BqD;EA2BtD;;EAED8H,uBAAuB,CAACpE,KAAD,EAAW;IAEhC;IACA,MAAMsD,KAAK,GAAGtD,KAAK,CAACqD,MAAN,CAAaC,KAA3B,CAHgC,CAIhC;;IACA,KAAKhI,cAAL,CAAoB7B,kBAApB,GAA0C6J,KAAK,KAAK,CAApD;EAED;;EAEDe,sBAAsB,CAACrE,KAAD,EAAW,CAEhC;;EAEDsE,oBAAoB;IAClB,MAAMhI,OAAO,GAAG;MACdC,IAAI,EAAE,CADQ;MAEdC,QAAQ,EAAE,GAFI;MAGdC,UAAU,EAAE,KAAKgH,mBAAL,CAAyBhJ,WAHvB;MAIdiC,QAAQ,EAAE,IAJI;MAKdC,MAAM,EAAE,IALM;MAMd3C,KAAK,EAAE,KAAKyJ,mBAAL,CAAyB/I,cANlB;MAOdkC,SAAS,EAAE,IAPG;MAQdC,aAAa,EAAE,IARD;MASdC,MAAM,EAAE,IATM;MAUdC,OAAO,EAAE,IAVK;MAWdC,WAAW,EAAE,IAXC;MAYdC,OAAO,EAAE,IAZK;MAadC,QAAQ,EAAE,IAbI;MAcdC,aAAa,EAAE,IAdD;MAedC,WAAW,EAAE,IAfC;MAgBdC,QAAQ,EAAE;IAhBI,CAAhB;IAmBA,KAAKC,uBAAL,CAA6BhB,OAA7B,EAAsC,IAAtC;IAEA,KAAKyD,iBAAL,CAAuBQ,OAAvB;EACD;;EAGDgE,iBAAiB;IACf,KAAKd,mBAAL,CAAyBhJ,WAAzB,GAAuC,EAAvC;IACA,KAAKgJ,mBAAL,CAAyB/I,cAAzB,GAA0C,EAA1C;IACA,KAAK+I,mBAAL,CAAyBjJ,uBAAzB,GAAmD,CAAnD;IACA,KAAKgK,WAAL,CAAiBlB,KAAjB,GAAyB,CAAzB;IACA,KAAKmB,iBAAL,CAAuBnB,KAAvB,GAA+B,CAA/B;EACD;;EAEDoB,OAAO,CAACC,GAAD,EAAI,CACT;EACD;;EAEDC,gBAAgB;IACd,KAAK7E,iBAAL,CAAuBQ,OAAvB;EACD;;EAEDhF,OAAO,CAAC+H,KAAD,EAAW;IAChB,OAAO,IAAItL,0EAAJ,GAAkBmC,SAAlB,CAA4BmJ,KAA5B,CAAP;EACD;;AApuBsB;;;mBAAZjL,cAAYJ,gEAAAA,CAAAA,iEAAAA,GAAAA,gEAAAA,CAAAA,8DAAAA,GAAAA,gEAAAA,CAAAA,oDAAAA,GAAAA,gEAAAA,CAAAA,qDAAAA,GAAAA,gEAAAA,CAAAA,qEAAAA,GAAAA,gEAAAA,CAAAA,mDAAAA,GAAAA,gEAAAA,CAAAA,0DAAAA,GAAAA,gEAAAA,CAAAA,6DAAAA,GAAAA,gEAAAA,CAAAA,kEAAAA,GAAAA,gEAAAA,CAAAA,+EAAAA,GAAAA,gEAAAA,CAAAA,+DAAAA,GAAAA,gEAAAA,CAAAA,iEAAAA,GAAAA,gEAAAA,CAAAA,qEAAAA,GAAAA,gEAAAA,CAAAA,4DAAAA,GAAAA,gEAAAA,CAAAA,yEAAAA,GAAAA,gEAAAA,CAAAA,8DAAAA,GAAAA,gEAAAA,CAAAA,sDAAAA,GAAAA,gEAAAA,CAAAA,6EAAAA;AAAA;;;QAAZI;EAAYwM;EAAAC;IAAA;iEACZ/M,qDAAQA,EAAA;;;;;;;;;;;;;;;;;;;;MCSrBE,6DAAAA,sBAAiC,CAAjC,EAAiC,KAAjC,EAAiC,CAAjC,EAAiC,KAAjC,EAAiC,CAAjC,EAAiC,KAAjC,EAAiC,CAAjC,EAAiC,CAAjC,EAAiC,eAAjC,EAAiC,CAAjC;MAOyCA,yDAAAA;QAAA,OAAa8M,8BAAb;MAAuC,CAAvC;MACJ9M,2DAAAA;MAS7BA,6DAAAA;MAAaA,yDAAAA;QAAA,OAAS8M,gCAAT;MAAqC,CAArC;MACX9M,6DAAAA;MACEA,wDAAAA;MACFA,2DAAAA;MAGFA,6DAAAA;MACEA,yDAAAA;QAAA,iCAAoC,KAApC;MAAyC,CAAzC;MACAA,yDAAAA;MAyEFA,2DAAAA;MAkBFA,6DAAAA,eAAkD,EAAlD,EAAkD,UAAlD,EAAkD,EAAlD,EAAkD,UAAlD;MAGMA,wDAAAA;MACAA,6DAAAA;MACEA,yDAAAA;QAAA,OAAa8M,sCAAb;MAA+C,CAA/C;MAEA9M,6DAAAA;MACEA,qDAAAA;MACFA,2DAAAA;MACAA,yDAAAA;MA2BFA,2DAAAA;MAKFA,yDAAAA;MAgCAA,yDAAAA;MAyCFA,2DAAAA;MAMJA,6DAAAA,gBAAgC,EAAhC,EAAgC,UAAhC;MAIIA,yDAAAA;MAiDFA,2DAAAA;MAKJA,6DAAAA,oBAAyD,EAAzD,EAAyD,gBAAzD,EAAyD,EAAzD;MACkBA,yDAAAA;QAAA,OAAS8M,yBAAT;MAA8B,CAA9B;MACd9M,wDAAAA;MACFA,2DAAAA;MAOJA,6DAAAA;MACEA,yDAAAA;MAkJFA,2DAAAA;;;;MA7aoDA,wDAAAA;MAAAA,yDAAAA;MAuGFA,wDAAAA;MAAAA,yDAAAA;MAgC7BA,wDAAAA;MAAAA,yDAAAA;MAgCAA,wDAAAA;MAAAA,yDAAAA;MAmDiBA,wDAAAA;MAAAA,yDAAAA;MAgE3BA,wDAAAA;MAAAA,yDAAAA","sources":["./src/app/shared/pipe/request-type.ts","./src/app/shared/pipe/status-request.ts","./src/app/tabs/requests/requests-routing.module.ts","./src/app/tabs/requests/requests.module.ts","./src/app/tabs/requests/requests.page.ts","./src/app/tabs/requests/requests.page.html"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n// import { IsEmptyPipe } from './is-empty.pipe';\r\n\r\n@Pipe({\r\n  name: 'requestTypePipe'\r\n})\r\nexport class RequestTypePipe implements PipeTransform {\r\n  constructor() {\r\n\r\n  }\r\n  transform(requestID: any, listResquest: any): string {\r\n    const objResByID = listResquest.find((objRes: any) => objRes.requestTypeId === requestID);\r\n    return objResByID.requestTypeName;\r\n  }\r\n\r\n  private isEmpty(value: any): boolean {\r\n    if (value === null || value === undefined) {\r\n      return true;\r\n    }\r\n\r\n    if (typeof value === 'string' && value.trim() === '') {\r\n      return true;\r\n    }\r\n\r\n    if (Array.isArray(value) && value.length === 0) {\r\n      return true;\r\n    }\r\n\r\n    if (typeof value === 'object' && Object.keys(value).length === 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // if (value === null || value === undefined) {\r\n  //   return true;\r\n  // }\r\n\r\n  // if (typeof value === 'string' && value.trim() === '') {\r\n  //   return true;\r\n  // }\r\n\r\n  // if (Array.isArray(value) && value.length === 0) {\r\n  //   return true;\r\n  // }\r\n\r\n  // if (typeof value === 'object' && Object.keys(value).length === 0) {\r\n  //   return true;\r\n  // }\r\n\r\n  // return false;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n// import { IsEmptyPipe } from './is-empty.pipe';\r\n\r\n@Pipe({\r\n  name: 'statusRequestPipe'\r\n})\r\nexport class StatusRequestPipe implements PipeTransform {\r\n  constructor() {\r\n\r\n  }\r\n  transform(request: any): string {\r\n    if (this.isEmpty(request.receiveTime)) {\r\n      return 'Chưa nhận yêu cầu';\r\n    }\r\n\r\n    if (this.isEmpty(request.arriveTime)) {\r\n      return 'Đã nhận yêu cầu và đang xử lý';\r\n    }\r\n\r\n    if (this.isEmpty(request.completeTime)) {\r\n      return 'Đã nhận yêu cầu và đang xử lý';\r\n    }\r\n\r\n    if (this.isEmpty(request.arriveLaboTime)) {\r\n      return 'Đã nhận yêu cầu và đang xử lý';\r\n    }\r\n\r\n    return 'Đã nhận yêu cầu và đang xử lý';\r\n  }\r\n\r\n  private isEmpty(value: any): boolean {\r\n    if (value === null || value === undefined) {\r\n      return true;\r\n    }\r\n\r\n    if (typeof value === 'string' && value.trim() === '') {\r\n      return true;\r\n    }\r\n\r\n    if (Array.isArray(value) && value.length === 0) {\r\n      return true;\r\n    }\r\n\r\n    if (typeof value === 'object' && Object.keys(value).length === 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // if (value === null || value === undefined) {\r\n  //   return true;\r\n  // }\r\n\r\n  // if (typeof value === 'string' && value.trim() === '') {\r\n  //   return true;\r\n  // }\r\n\r\n  // if (Array.isArray(value) && value.length === 0) {\r\n  //   return true;\r\n  // }\r\n\r\n  // if (typeof value === 'object' && Object.keys(value).length === 0) {\r\n  //   return true;\r\n  // }\r\n\r\n  // return false;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RequestsPage } from './requests.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RequestsPage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RequestsPageRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RequestsPage } from './requests.page';\r\nimport { ExploreContainerComponentModule } from '../../explore-container/explore-container.module';\r\n\r\nimport { RequestsPageRoutingModule } from './requests-routing.module';\r\nimport { AppVersion } from '@ionic-native/app-version/ngx';\r\nimport { IsEmptyPipe } from 'src/app/shared/pipe/is-empty.pipe';\r\nimport { SharedModule } from 'src/app/shared/modules/share.module';\r\nimport { OrderStatusPipe } from 'src/app/shared/pipe/order-status.pipe';\r\nimport { StatusRequestPipe } from 'src/app/shared/pipe/status-request';\r\nimport { RequestTypePipe } from 'src/app/shared/pipe/request-type';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ExploreContainerComponentModule,\r\n    RequestsPageRoutingModule,\r\n    SharedModule\r\n  ],\r\n  providers: [AppVersion],\r\n  declarations: [RequestsPage, StatusRequestPipe, RequestTypePipe]\r\n})\r\nexport class RequestsPageModule { }\r\n","/* eslint-disable max-len */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PhotoService } from '../../services/photo.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport {\r\n  ActionSheetController,\r\n  AlertController,\r\n  IonSelect,\r\n  LoadingController,\r\n  NavController,\r\n  PickerController,\r\n  Platform,\r\n  PopoverController\r\n} from '@ionic/angular';\r\nimport { Constant } from '../../shared/constants/constant.class';\r\nimport { StorageService } from '../../services/storage.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { MainService } from '../../services/main.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { BadgeService } from '../../services/badge.service';\r\nimport { AppVersion } from '@ionic-native/app-version/ngx';\r\n\r\nimport { IonModal } from '@ionic/angular';\r\nimport { OverlayEventDetail } from '@ionic/core/components';\r\nimport { IsEmptyPipe } from 'src/app/shared/pipe/is-empty.pipe';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { GeneralService } from 'src/app/services/general-service';\r\n\r\n@Component({\r\n  selector: 'app-requests',\r\n  templateUrl: 'requests.page.html',\r\n  styleUrls: ['requests.page.scss']\r\n})\r\nexport class RequestsPage implements OnInit {\r\n  @ViewChild(IonModal) modal!: IonModal;\r\n  @ViewChild('popoverFormFilter') popoverFormFilter;\r\n  @ViewChild('orderStatusSelect') orderStatusSelect: IonSelect;\r\n  @ViewChild('requestType') requestType: IonSelect;\r\n  now: any;\r\n  userInfo: any;\r\n  isPopoverOpenFilter = false;\r\n  keywordSearch: any;\r\n\r\n\r\n  titleModalAddPatient = 'Thêm yêu cầu';\r\n  instructionModalPatient = 'Mời nhập thông tin bệnh nhân :';\r\n  numberOfNewPatients = 0;\r\n  isModalOpenFormPatient = false;\r\n\r\n\r\n  validFormInput = {\r\n    isEmptyRequestType: false,\r\n    // isEmptyFullName: false,\r\n    isEmptyNumberPhone: false,\r\n    isEmptyAdress: false,\r\n    isEmptyTimeSample: false,\r\n  };\r\n\r\n\r\n\r\n  customPopoverOptions = {\r\n    // header: 'Trạng thái đơn hàng',\r\n    subHeader: 'Chọn trạng thái đơn hàng cần lọc',\r\n    // message: 'Chỉ chọn một TTĐH',\r\n  };\r\n\r\n  itemPatientFormModalLab = {\r\n    valueRequestType: 0,\r\n    name: '',\r\n    phone: '',\r\n    address: '',\r\n    timeSample: this.datePipe.transform(new Date(), 'yyyy-MM-ddTHH:mm:ss'),\r\n    notes: '',\r\n  };\r\n\r\n  listPatientLab = [\r\n    {\r\n      name: '1234-1643 Trần Văn A',\r\n      phone: '0981123574',\r\n      address: 'CT6 Khu đô thị Việt Hưng, Long Biên, Hà Nội',\r\n      conditon: 'Viêm loét dạ dày tá tràng',\r\n      status: 'Chưa nhận yêu cầu',\r\n      notes: '',\r\n    },\r\n\r\n    {\r\n      name: '1234 - 2341 Trần Thị Lý',\r\n      phone: '0234538592',\r\n      address: '257 Giải phóng, Hai Bà Trưng, Hà Nội',\r\n      conditon: 'Sốt xuất huyết',\r\n      status: 'Đã nhận yêu cầu và đang xử lý',\r\n      notes: '',\r\n    },\r\n\r\n    {\r\n      name: '1234 - 1643 Lý Thuỳ Linh',\r\n      phone: '0903245394',\r\n      address: '40 Phường Liệt, Thanh Xuân, Hà Nội',\r\n      conditon: 'Viêm gan A',\r\n      status: 'Đã trả kết quả',\r\n      notes: '',\r\n    }\r\n  ];\r\n\r\n  // Chức dữ liệu cơ sở, khởi tạo ban đầu.\r\n  initDatas: any;\r\n\r\n  // Danh sách các Phiểu xét nghiếm\r\n  listOrder: any[] = [];\r\n\r\n  // Danh sách yêu cầu Xét nghiệm\r\n  listRequest: any[] = [];\r\n\r\n  // Danh sách đối tác\r\n  listPartner = [];\r\n\r\n  // Danh sách các loại yêu cầu\r\n  listTypeOrder = [];\r\n\r\n  // Form lọc theo filter\r\n  formFilterTestSheet = {\r\n    valueRequestTypePatient: 0,\r\n    namePatient: '',\r\n    phoneNoPatient: '',\r\n    addressPatient: '',\r\n    orderStatus: 0,\r\n  };\r\n\r\n  filterInterval = {\r\n    isShow: false,\r\n    presentTime: '',\r\n    pastTime: '',\r\n  };\r\n\r\n  customAlertOptionsRequestType = {\r\n    header: 'Chọn loại yêu cầu',\r\n    // subHeader: '',\r\n    // message: '',\r\n    translucent: true,\r\n  };\r\n\r\n\r\n  constructor(public photoService: PhotoService,\r\n    private popoverController: PopoverController,\r\n    private router: Router,\r\n    private platform: Platform,\r\n    private localStorage: StorageService,\r\n    private storage: Storage,\r\n    public navCtrl: NavController,\r\n    private pickerCtrl: PickerController,\r\n    private actionSheetCtrl: ActionSheetController,\r\n    private notificationService: NotificationService,\r\n    private mainService: MainService,\r\n    public badgeService: BadgeService,\r\n    private appVersion: AppVersion,\r\n    private alertController: AlertController,\r\n    private orderService: OrderService,\r\n    private loadingCtrl: LoadingController,\r\n    private datePipe: DatePipe,\r\n    private generalService: GeneralService,\r\n  ) {\r\n    this.now = new Date();\r\n\r\n\r\n    this.listPatientLab = [\r\n      {\r\n        name: '1234-1643 Trần Văn A',\r\n        phone: '0981123574',\r\n        address: 'CT6 Khu đô thị Việt Hưng, Long Biên, Hà Nội',\r\n        conditon: 'Viêm loét dạ dày tá tràng',\r\n        status: 'Chưa nhận yêu cầu',\r\n        notes: '',\r\n      },\r\n\r\n      {\r\n        name: '1234 - 2341 Trần Thị Lý',\r\n        phone: '0234538592',\r\n        address: '257 Giải phóng, Hai Bà Trưng, Hà Nội',\r\n        conditon: 'Sốt xuất huyết',\r\n        status: 'Đã nhận yêu cầu và đang xử lý',\r\n        notes: '',\r\n      },\r\n\r\n      {\r\n        name: '1234 - 1643 Lý Thuỳ Linh',\r\n        phone: '0903245394',\r\n        address: '40 Phường Liệt, Thanh Xuân, Hà Nội',\r\n        conditon: 'Viêm gan A',\r\n        status: 'Đã trả kết quả',\r\n        notes: '',\r\n      }\r\n    ];\r\n  }\r\n\r\n\r\n  onKeyUpInputNamePatient() {\r\n    // Set is show message error Fullname\r\n    // this.validFormInput.isEmptyFullName = this.isEmpty(this.itemPatientFormModalLab.name);\r\n  }\r\n\r\n  onKeyUpInputNumberPhone() {\r\n    // Set is show message error Numberphone\r\n    this.validFormInput.isEmptyNumberPhone = this.isEmpty(this.itemPatientFormModalLab.phone);\r\n  }\r\n\r\n\r\n  onKeyUpInputAddress() {\r\n    // Set is show message error Address\r\n    this.validFormInput.isEmptyAdress = this.isEmpty(this.itemPatientFormModalLab.address);\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    // console.log('ionViewDidLoad');\r\n  }\r\n\r\n  ionViewWillLeave() {\r\n    // console.log('ionViewWillLeave');\r\n  }\r\n\r\n  ionViewDidLeave() {\r\n    // console.log('ionViewDidLeave');\r\n  }\r\n\r\n  ionViewWillUnload() {\r\n    // console.log('ionViewWillUnload');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    // console.log('ionViewDidEnter');\r\n  }\r\n\r\n  async ionViewWillEnter() {\r\n    // console.log('ionViewWillEnter');\r\n\r\n\r\n  }\r\n\r\n  async ngOnInit() {\r\n    // console.log('ngOnInit');\r\n    this.localStorage.getSelectedUser().then((res) => {\r\n      this.userInfo = res;\r\n    });\r\n\r\n    // Lấy dữ liệu cho biến DS Dữ liệu khởi tạo\r\n    await this.getListInitialData();\r\n\r\n\r\n    // Lấy dữ liệu danh sách phiếu xét nghiệm\r\n    // await this.getListOrder();\r\n\r\n    // Lấy dữ liệu danh sách yêu cầu xét nghiệm\r\n    const payload = {\r\n      page: 1,\r\n      pageSize: 100,\r\n      textSearch: null,\r\n      fromDate: null,\r\n      toDate: null,\r\n      phone: null,\r\n      partnerId: null,\r\n      receiveUserId: null,\r\n      called: null,\r\n      arrived: null,\r\n      arrivedLabo: null,\r\n      warning: null,\r\n      received: null,\r\n      requestTypeId: null,\r\n      userCreated: null,\r\n      canceled: false\r\n    };\r\n    await this.getListRequestByPayload(payload, true);\r\n\r\n    // Lấy danh sách loại yêu cầu\r\n    await this.getListOrderType();\r\n\r\n\r\n    // Lấy dữ liệu danh sách các đối tác\r\n    // await this.getListPartner();\r\n  }\r\n\r\n  async showLoading() {\r\n    const loading = await this.loadingCtrl.create({\r\n      message: 'Dữ liệu đang tải lên ...',\r\n      duration: 2000,\r\n    });\r\n\r\n    loading.present();\r\n  }\r\n\r\n  getListOrder() {\r\n    // Show thông báo delay thời gian chờ loading dữ liệu\r\n    this.showLoading();\r\n\r\n    const payload = {\r\n      barcode: '',\r\n      patient: '',\r\n      status: 0,\r\n      fromDate: '',\r\n      toDate: '',\r\n      assignToUserId: 0,\r\n      counselors: null,\r\n      partnerId: 0,\r\n      isSendSMS: null,\r\n      isPrintResult: null,\r\n      patientAge: null,\r\n      phoneNo: null,\r\n      keyword: '',\r\n      pageSize: 50,\r\n      page: 1,\r\n    };\r\n    this.orderService.getOrders(payload).subscribe(\r\n      (res) => {\r\n        if (res != null) {\r\n          this.listOrder = res.data;\r\n          // console.log('this.listOrder : ', this.listOrder);\r\n        }\r\n      },\r\n      (error) => {\r\n        if (error.status === 403) {\r\n          this.notificationService.showMessage(Constant.DANGER, `Người dùng có quyền truy cập`);\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          this.notificationService.showMessage(Constant.DANGER, `Dữ liệu trả về đã có lỗi xảy ra`);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  getListOrderType() {\r\n    this.generalService.getListRequestType().subscribe(\r\n      (res) => {\r\n        if (res !== null) {\r\n          // console.log('getListOrderType res: ', res);\r\n          this.listTypeOrder = res.filter(en => en.requestTypeCode === 'LM' || en.requestTypeCode === 'TM');\r\n        }\r\n      },\r\n      (error) => {\r\n      }\r\n    );\r\n  }\r\n\r\n  getListRequestByPayload(payload: any, isLoading: boolean) {\r\n    // Show thông báo delay thời gian chờ loading dữ liệu\r\n    if (isLoading) {\r\n      this.showLoading();\r\n    }\r\n\r\n    this.generalService.getRequest(payload).subscribe(\r\n      (res: any) => {\r\n        if (res != null) {\r\n          this.listRequest = res.data;\r\n          // console.log('this.listRequest : ', this.listRequest);\r\n        }\r\n      },\r\n      (error) => {\r\n        if (error.status === 403) {\r\n          this.notificationService.showMessage(Constant.DANGER, `Người dùng có quyền truy cập`);\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          this.notificationService.showMessage(Constant.DANGER, `Dữ liệu trả về đã có lỗi xảy ra`);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  getListInitialData() {\r\n    this.initDatas = JSON.parse(localStorage.getItem(Constant.INIT_DATA));\r\n  }\r\n\r\n  presentPopoverFilter(e: Event) {\r\n    this.popoverFormFilter.event = e;\r\n    this.isPopoverOpenFilter = true;\r\n  }\r\n\r\n  getListPartner() {\r\n    this.generalService.getListPartner().subscribe(\r\n      (res) => {\r\n        this.listPartner = res;\r\n      },\r\n      (error) => { }\r\n    );\r\n  }\r\n\r\n  showProfile() {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.localStorage.clearAll();\r\n    this.popoverController.dismiss();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  doRefresh($event) {\r\n\r\n  }\r\n\r\n\r\n  setOpenModalAddPatient(isOpen: boolean) {\r\n    this.isModalOpenFormPatient = isOpen;\r\n  }\r\n\r\n  openModalPatientLab() {\r\n    // Reset lại lời dẫn\r\n    this.instructionModalPatient = 'Mời tạo phiếu yêu cầu xét nghiệm:';\r\n    this.numberOfNewPatients = 0;\r\n\r\n    this.resetFormModalPatient();\r\n    this.restartValidFormAddPatient();\r\n    this.setOpenModalAddPatient(true);\r\n  }\r\n\r\n  restartValidFormAddPatient() {\r\n    this.validFormInput.isEmptyAdress = false;\r\n    // this.validFormInput.isEmptyFullName = false;\r\n    this.validFormInput.isEmptyNumberPhone = false;\r\n    this.validFormInput.isEmptyRequestType = false;\r\n\r\n  }\r\n\r\n  cancelModalAddPatient() {\r\n    this.setOpenModalAddPatient(false);\r\n    // this.modal.dismiss(null, 'cancel');\r\n  }\r\n\r\n\r\n  confirmPatientModal() {\r\n    // const isName = !this.isEmpty(this.itemPatientFormModalLab.name);\r\n    // this.validFormInput.isEmptyFullName = !isName;\r\n\r\n    const isPhone = !this.isEmpty(this.itemPatientFormModalLab.phone);\r\n    this.validFormInput.isEmptyNumberPhone = !isPhone;\r\n\r\n\r\n    const isAddress = !this.isEmpty(this.itemPatientFormModalLab.address);\r\n    this.validFormInput.isEmptyAdress = !isAddress;\r\n\r\n\r\n    const isRequest = !(this.itemPatientFormModalLab.valueRequestType === 0);\r\n    this.validFormInput.isEmptyRequestType = !isRequest;\r\n\r\n    const isTimeSample = !this.isEmpty(this.itemPatientFormModalLab.timeSample);\r\n    this.validFormInput.isEmptyTimeSample = !isTimeSample;\r\n\r\n    return (isRequest && isPhone && isAddress && isTimeSample);\r\n  }\r\n\r\n  saveModalAddPatient() {\r\n    if (this.confirmPatientModal()) {\r\n      // Thêm mới một item Patient\r\n      this.listPatientLab.push(JSON.parse(JSON.stringify(this.itemPatientFormModalLab)));\r\n\r\n      const PARTNER_ID = 4;\r\n      const item = {\r\n        partnerId: PARTNER_ID,\r\n        userId: this.userInfo.id,\r\n        dateCreated: null,\r\n        appointmentDate: this.itemPatientFormModalLab.timeSample,\r\n        receiveTime: null,\r\n        arriveTime: null,\r\n        completeTime: null,\r\n        arriveLaboTime: null,\r\n        returnResultReceiveTime: null,\r\n        returnResultAppointmentDate: null,\r\n        returnResultCompleteTime: null,\r\n        address: this.itemPatientFormModalLab.address,\r\n        phone: this.itemPatientFormModalLab.phone,\r\n        requestTypeId: this.itemPatientFormModalLab.valueRequestType,\r\n        requestSourceId: null,\r\n        comment: this.itemPatientFormModalLab.notes,\r\n        receiveUserId: null,\r\n      };\r\n      this.generalService.addRequest(item).subscribe((res: any) => {\r\n        if (res.ret && res.ret[0].code !== 0) {\r\n          this.notificationService.showMessage(Constant.DANGER, res.ret[0].message);\r\n        } else {\r\n          // this.notificationService.showMessage(Constant.SUCCESS, Constant.MESSAGE_ADD_SUCCESS);\r\n          this.notificationService.showMessage(Constant.SUCCESS, 'Tạo yêu cầu thành công!');\r\n          this.setOpenModalAddPatient(false);\r\n        }\r\n      });\r\n    } else {\r\n      this.notificationService.showMessage(Constant.DANGER, 'Nhập thiếu trường dữ liệu bắt buộc!');\r\n    }\r\n\r\n  }\r\n\r\n\r\n  nextModalPatient() {\r\n    if (this.confirmPatientModal()) {\r\n      // Thêm mới một item Patient\r\n      this.listPatientLab.push(JSON.parse(JSON.stringify(this.itemPatientFormModalLab)));\r\n\r\n      // Thêm +1 bệnh nhân thành công. Tăng biến đếm số lượng bệnh nhân thêm mới thành công lên 1\r\n      this.numberOfNewPatients++;\r\n\r\n      // Thay đổ lời đầu modal kkhi thêm mới\r\n      this.instructionModalPatient = `Đã thêm <strong>${this.numberOfNewPatients}</strong> bệnh nhân. Mời nhập thông tin bệnh nhân tiếp theo:`;\r\n\r\n      // Reset form model lab\r\n      this.resetFormModalPatient();\r\n    };\r\n\r\n  }\r\n\r\n  onWillDismiss(event: Event) {\r\n    const ev = event as CustomEvent<OverlayEventDetail<string>>;\r\n    if (ev.detail.role === 'confirm') {\r\n\r\n    } else if (ev.detail.role === 'next') {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  resetFormModalPatient() {\r\n    this.itemPatientFormModalLab = {\r\n      valueRequestType: 0,\r\n      name: '',\r\n      phone: '',\r\n      address: '',\r\n      timeSample: this.datePipe.transform(new Date(), 'yyyy-MM-ddTHH:mm:ss'),\r\n      notes: '',\r\n    };\r\n  }\r\n\r\n\r\n  async handleChangeSearch(event: any) {\r\n    this.keywordSearch = event.target.value;\r\n\r\n\r\n    const payload = {\r\n      page: 1,\r\n      pageSize: 100,\r\n      textSearch: this.keywordSearch,\r\n      fromDate: this.filterInterval.pastTime,\r\n      toDate: this.filterInterval.presentTime,\r\n      phone: null,\r\n      partnerId: null,\r\n      receiveUserId: null,\r\n      called: null,\r\n      arrived: null,\r\n      arrivedLabo: null,\r\n      warning: null,\r\n      received: null,\r\n      requestTypeId: null,\r\n      userCreated: null,\r\n      canceled: false\r\n    };\r\n\r\n    this.getListRequestByPayload(payload, false);\r\n\r\n  }\r\n\r\n\r\n  async handleChangeSelectOrderStatus(event: any) {\r\n    this.formFilterTestSheet.orderStatus = event.target.value;\r\n  }\r\n\r\n\r\n  handleChangeFilterInterval(event: any) {\r\n    const value = event.target.value;\r\n    // let isShowFilterInterval = this.filterInterval.isShow;\r\n    const pastTime = new Date();\r\n    const presentTime = new Date();\r\n\r\n    pastTime.setHours(0, 0, 0, 0);\r\n\r\n    // Get the current day of the week (0-6, where Sunday is 0)\r\n    const currentDay = presentTime.getDay();\r\n    // Subtract the number of days elapsed in the current week\r\n    let daysToSubtract: any;\r\n    switch (value) {\r\n      case 1:\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 0;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Đầu ngày hôm nay', pastTime);\r\n        break;\r\n      case 2:\r\n        // Subtract 1 day\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 1;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Cách đây 1 ngày trước', pastTime);\r\n        break;\r\n      case 3:\r\n        // Subtract 7 day\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 7;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Cách đây 7 ngày', pastTime);\r\n        break;\r\n      case 4:\r\n        // Subtract 14 day\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 14;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Cách đây 14 ngày', pastTime);\r\n        break;\r\n      case 5:\r\n        // Subtract 30 day\r\n        this.filterInterval.isShow = false;\r\n        daysToSubtract = 30;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Cách đây 30 ngày', pastTime);\r\n        break;\r\n      case 6:\r\n        // Đầu tuần này\r\n        this.filterInterval.isShow = false;\r\n\r\n        daysToSubtract = currentDay === 0 ? 6 : currentDay - 1;\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log('Đầu tuần này', pastTime);\r\n        break;\r\n      case 7:\r\n        // Đầu tuần trước\r\n        this.filterInterval.isShow = false;\r\n\r\n        daysToSubtract = currentDay + 7 - 1;\r\n        // console.log('daysToSubtract', daysToSubtract);\r\n        pastTime.setDate(pastTime.getDate() - daysToSubtract);\r\n        // console.log(' Đầu tuần trước', pastTime);\r\n        break;\r\n      case 8:\r\n        // Đầu tháng này\r\n        this.filterInterval.isShow = false;\r\n\r\n        pastTime.setDate(1);\r\n        // console.log('Đầu tháng này', pastTime);\r\n        break;\r\n      case 9:\r\n        // Đầu tháng trước\r\n        this.filterInterval.isShow = false;\r\n\r\n        // Set the date to the first day of the current mounth\r\n        pastTime.setDate(1);\r\n\r\n        // Subtract one month from the date\r\n        pastTime.setMonth(pastTime.getMonth() - 1);\r\n\r\n        // console.log('Đầu tháng trước ', pastTime);\r\n        break;\r\n      case 10:\r\n        // Hiện calender cho hai thời điểm lọc dữ liệu.\r\n        this.filterInterval.isShow = true;\r\n        break;\r\n      default:\r\n        this.filterInterval.isShow = false;\r\n        break;\r\n    }\r\n    // Đặt dữ liệu ban đầu cho khoảng thời gian lọc dữ liệu\r\n    if (value >= 1 && value <= 10) {\r\n      // Bắt đầu - Thời điểm 0h ngày hôm nay\r\n      this.filterInterval.pastTime = this.datePipe.transform(pastTime, 'yyyy-MM-ddTHH:mm:ss');\r\n\r\n      // Kết thúc - Thời điểm hiện tại\r\n      this.filterInterval.presentTime = this.datePipe.transform(presentTime, 'yyyy-MM-ddTHH:mm:ss');\r\n    } else {\r\n      // Bắt đầu - Thời điểm 0h ngày hôm nay\r\n      this.filterInterval.pastTime = '';\r\n      // console.log('this.filterInterval.pastTime : ', this.filterInterval.pastTime);\r\n      // Kết thúc - Thời điểm hiện tại\r\n      this.filterInterval.presentTime = '';\r\n    }\r\n\r\n    const payload = {\r\n      page: 1,\r\n      pageSize: 100,\r\n      textSearch: this.keywordSearch,\r\n      fromDate: this.filterInterval.pastTime,\r\n      toDate: this.filterInterval.presentTime,\r\n      phone: null,\r\n      partnerId: null,\r\n      receiveUserId: null,\r\n      called: null,\r\n      arrived: null,\r\n      arrivedLabo: null,\r\n      warning: null,\r\n      received: null,\r\n      requestTypeId: null,\r\n      userCreated: null,\r\n      canceled: false\r\n    };\r\n\r\n    this.getListRequestByPayload(payload, true);\r\n  }\r\n\r\n  async handleChangeFilterIntervalCustomByUser(event: any) {\r\n    // console.log('handleChangeFilterIntervalCustomByUser event', event);\r\n    const pastTime = this.filterInterval.pastTime;\r\n    // console.log('pastTime: ',pastTime);\r\n    const presentTime = this.filterInterval.presentTime;\r\n    // console.log('presentTime: ',presentTime);\r\n\r\n    const payload = {\r\n      page: 1,\r\n      pageSize: 100,\r\n      textSearch: this.formFilterTestSheet.namePatient,\r\n      fromDate: pastTime,\r\n      toDate: presentTime,\r\n      phone: null,\r\n      partnerId: null,\r\n      receiveUserId: null,\r\n      called: null,\r\n      arrived: null,\r\n      arrivedLabo: null,\r\n      warning: null,\r\n      received: null,\r\n      requestTypeId: null,\r\n      userCreated: null,\r\n      canceled: false\r\n    };\r\n\r\n    this.getListRequestByPayload(payload, false);\r\n  }\r\n\r\n  handleChangeRequestType(event: any) {\r\n\r\n    // console.log('handleChangePartner event: ', event);\r\n    const value = event.target.value;\r\n    // this.itemPatientFormModalLab.valueRequestType = value;\r\n    this.validFormInput.isEmptyRequestType = (value === 0);\r\n\r\n  }\r\n\r\n  handleChangeTimeSample(event: any) {\r\n\r\n  }\r\n\r\n  onSearchByFormFilter() {\r\n    const payload = {\r\n      page: 1,\r\n      pageSize: 100,\r\n      textSearch: this.formFilterTestSheet.namePatient,\r\n      fromDate: null,\r\n      toDate: null,\r\n      phone: this.formFilterTestSheet.phoneNoPatient,\r\n      partnerId: null,\r\n      receiveUserId: null,\r\n      called: null,\r\n      arrived: null,\r\n      arrivedLabo: null,\r\n      warning: null,\r\n      received: null,\r\n      requestTypeId: null,\r\n      userCreated: null,\r\n      canceled: false\r\n    };\r\n\r\n    this.getListRequestByPayload(payload, true);\r\n\r\n    this.popoverFormFilter.dismiss();\r\n  }\r\n\r\n\r\n  restartFormFilter() {\r\n    this.formFilterTestSheet.namePatient = '';\r\n    this.formFilterTestSheet.phoneNoPatient = '';\r\n    this.formFilterTestSheet.valueRequestTypePatient = 0;\r\n    this.requestType.value = 0;\r\n    this.orderStatusSelect.value = 0;\r\n  }\r\n\r\n  pushLog(msg) {\r\n    // console.log(msg);\r\n  }\r\n\r\n  cancelFormFilter() {\r\n    this.popoverFormFilter.dismiss();\r\n  }\r\n\r\n  isEmpty(value: any) {\r\n    return new IsEmptyPipe().transform(value);\r\n  }\r\n}\r\n","<!-- <ion-content>\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\r\n    <ion-refresher-content\r\n      pullingIcon=\"chevron-down-circle-outline\"\r\n      pullingText=\"Thả tay để tải lại dữ liệu\"\r\n      refreshingSpinner=\"circles\"\r\n      refreshingText=\"Đang tải...\">\r\n    </ion-refresher-content>\r\n  </ion-refresher>\r\n  <div class=\"sticky-header\">\r\n    <ion-row class=\"info-row\" #hideheader>\r\n      <ion-col size=\"10\">\r\n        <ion-text color=\"dark\" *ngIf=\"userInfo\">\r\n          <strong style=\"font-size: 18px\">{{userInfo.fullname}}</strong><br>\r\n          <span style=\"font-size: 12px;color:lightslategray\">Ngày {{ now | date:'dd/MM/yyyy'}}</span>\r\n        </ion-text>\r\n      </ion-col>\r\n      <ion-col size=\"2\" class=\"ion-padding-start\">\r\n        <ion-button fill=\"clear\" id=\"trigger-button\" class=\"ion-no-padding\">\r\n          <ion-icon name=\"person-outline\" slot=\"icon-only\"></ion-icon>\r\n        </ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  </div>\r\n  <ion-popover trigger=\"trigger-button\" [isOpen]=\"isPopoverOpen\">\r\n    <ng-template>\r\n      <ion-list scroll=\"false\" class=\"ion-no-padding\">\r\n        <ion-item class=\"ion-no-border ion-no-padding\" (click)=\"showProfile()\">\r\n          <ion-avatar class=\"size15\" slot=\"start\">\r\n            <ion-icon size=\"small\" name=\"person-outline\"></ion-icon>\r\n          </ion-avatar>\r\n          <ion-label>Thông tin</ion-label>\r\n        </ion-item>\r\n        <ion-item lines=\"none\" class=\"last ion-no-padding\" (click)=\"logout()\">\r\n          <ion-avatar class=\"size15\" slot=\"start\">\r\n            <ion-icon name=\"log-out-outline\" size=\"small\"></ion-icon>\r\n          </ion-avatar>\r\n          <ion-label class=\"btn\">Đăng xuất</ion-label>\r\n        </ion-item>\r\n      </ion-list>\r\n    </ng-template>\r\n  </ion-popover>\r\n</ion-content> -->\r\n\r\n<!-- <ion-label>formFilterTestSheet value: {{ formFilterTestSheet | json }}</ion-label> -->\r\n<ion-content class=\"ion-padding\">\r\n  <!-- Nội dung -->\r\n  <div>\r\n    <!-- Khu vực tìm kiếm -->\r\n    <div>\r\n      <!-- Tìm liếm - lọc [debounce]=\"100\" id=\"popover-search\" (keyup.enter)=\"onSearchByKeyword()\" -->\r\n      <div style=\"display: flex;\">\r\n        <ion-searchbar autocomplete=\"on\" (ionChange)=\"handleChangeSearch($event)\"\r\n          placeholder=\"Tìm kiếm ...\"></ion-searchbar>\r\n\r\n        <!--    <ion-list style=\"position: absolute; z-index: 100000;\">\r\n          <ion-item *ngFor=\"let name of listOrder\">\r\n            <ion-label>{{ name }}</ion-label>\r\n          </ion-item>\r\n        </ion-list> -->\r\n\r\n\r\n        <ion-buttons (click)=\"presentPopoverFilter($event)\" slot=\"start\">\r\n          <ion-button>\r\n            <ion-icon slot=\"icon-only\" name=\"funnel-outline\"></ion-icon>\r\n          </ion-button>\r\n        </ion-buttons>\r\n\r\n        <ion-popover #popoverFormFilter size=\"auto\" [isOpen]=\"isPopoverOpenFilter\"\r\n          (didDismiss)=\"isPopoverOpenFilter = false\">\r\n          <ng-template>\r\n            <ion-content class=\"ion-padding\">\r\n              <ion-label style=\"font-size: small;\">Lọc dữ liệu theo ...</ion-label>\r\n              <ion-list>\r\n                <!-- <ion-item style=\"font-size: small;\">\r\n                  <ion-label position=\"stacked\">\r\n                    <ion-icon name=\"person-outline\"></ion-icon>\r\n                    Tên bệnh nhân\r\n                  </ion-label>\r\n                  <ion-input placeholder=\"Nhập tên bệnh nhân ...\"\r\n                    [(ngModel)]=\"formFilterTestSheet.namePatient\"></ion-input>\r\n                </ion-item> -->\r\n\r\n                <ion-item>\r\n                  <ion-label position=\"stacked\">\r\n                    <ion-icon name=\"options-outline\"></ion-icon>\r\n                    Loại Yêu cầu\r\n                  </ion-label>\r\n                  <ion-select #requestType [interfaceOptions]=\"customAlertOptionsRequestType\" style=\"font-size: small;\" aria-label=\"parterns\"\r\n                    placeholder=\"Chọn loại yêu cầu ...\" (ionChange)=\"handleChangeRequestType($event)\"\r\n                    [(ngModel)]=\"formFilterTestSheet.valueRequestTypePatient\">\r\n                    <ion-select-option *ngFor=\"let typeOrder of listTypeOrder\"\r\n                      [value]=\"typeOrder.requestTypeId\">{{typeOrder.requestTypeName}}</ion-select-option>\r\n                  </ion-select>\r\n                </ion-item>\r\n\r\n\r\n                <ion-item style=\"font-size: small;\">\r\n                  <ion-label position=\"stacked\">\r\n                    <ion-icon name=\"call-outline\"></ion-icon>\r\n                    Số điện thoại\r\n                  </ion-label>\r\n                  <ion-input type=\"tel\" placeholder=\"Nhập SĐT ...\"\r\n                    [(ngModel)]=\"formFilterTestSheet.phoneNoPatient\"></ion-input>\r\n                </ion-item>\r\n\r\n\r\n                <ion-item style=\"font-size: small;\">\r\n                  <ion-label position=\"stacked\">\r\n                    <ion-icon name=\"location-outline\"></ion-icon>\r\n                    Địa chỉ\r\n                  </ion-label>\r\n                  <ion-input type=\"tel\" placeholder=\"Nhập Địa chỉ ...\"\r\n                    [(ngModel)]=\"formFilterTestSheet.addressPatient\"></ion-input>\r\n                </ion-item>\r\n\r\n\r\n                <ion-item style=\"font-size: small;\">\r\n                  <ion-label position=\"stacked\">\r\n                    <ion-icon name=\"send-outline\"></ion-icon>\r\n                    Trạng thái Đơn hàng\r\n                  </ion-label>\r\n                  <ion-select #orderStatusSelect style=\"font-size: small;\" label=\"Trạng thái Đơn hàng\"\r\n                    [interfaceOptions]=\"customPopoverOptions\" interface=\"alert\" label-placement=\"floating\"\r\n                    placeholder=\"Trạng thái đơn hàng\" (ionChange)=\"handleChangeSelectOrderStatus($event)\">\r\n                    <ion-select-option *ngFor=\"let order of initDatas.orderStatus\" style=\"font-size: small;\"\r\n                      [value]=\"order.id\">{{order.name}}</ion-select-option>\r\n                    <!-- <ion-select-option  style=\"font-size: small;\" value=\"0\">Chưa nhận yêu cầu</ion-select-option>\r\n                    <ion-select-option  style=\"font-size: small;\" value=\"1\">Đã nhận yêu cầu và đang xử lý</ion-select-option>\r\n                    <ion-select-option  style=\"font-size: small;\" value=\"2\">Đã trả kết quả</ion-select-option> -->\r\n                  </ion-select>\r\n                </ion-item>\r\n              </ion-list>\r\n              <ion-buttons style=\"display: flex; justify-content: space-evenly ; margin-top: 0.5rem;\">\r\n                <ion-button size=\"small\" fill=\"outline\" color=\"medium\" title=\"Huỷ\"\r\n                  (click)=\"cancelFormFilter()\"><ion-icon name=\"close-outline\"></ion-icon></ion-button>\r\n                <ion-button size=\"small\" fill=\"outline\" color=\"danger\" title=\"Xoá lọc\"\r\n                  (click)=\"restartFormFilter()\"><ion-icon size=\"small\" name=\"trash-outline\"></ion-icon></ion-button>\r\n                <ion-button size=\"small\" fill=\"solid\" (click)=\"onSearchByFormFilter()\" title=\"Lọc dữ liệu ...\"><ion-icon\r\n                    size=\"small\" name=\"search-outline\"></ion-icon></ion-button>\r\n              </ion-buttons>\r\n            </ion-content>\r\n          </ng-template>\r\n        </ion-popover>\r\n        <!-- <ion-item>\r\n        </ion-item> -->\r\n\r\n        <!-- <div style=\"display: flex; justify-content: center; align-items: center;\">\r\n          <ion-list>\r\n            <ion-item>\r\n              <ion-select interface=\"popover\" placeholder=\"Lọc\" >\r\n                <ion-select-option  value=\"dealthcare\">Nhóm BP</ion-select-option>\r\n                <ion-select-option  value=\"products\">Nhóm SP</ion-select-option>\r\n              </ion-select>\r\n              <ion-icon slot=\"start\" name=\"funnel-outline\" color=\"primary\"></ion-icon>\r\n            </ion-item>\r\n          </ion-list>\r\n        </div> -->\r\n      </div>\r\n\r\n      <!-- Lựa chọn khoảng thời gian lọc -->\r\n      <div style=\"display: flex; align-items: center; \">\r\n        <ion-list>\r\n          <ion-item>\r\n            <ion-icon slot=\"start\" name=\"calendar-clear-outline\" color=\"primary\"></ion-icon>\r\n            <ion-select aria-label=\"times\" interface=\"alert\" value=0 placeholder=\"Chọn khoảng thời gian lọc ...\"\r\n              (ionChange)=\"handleChangeFilterInterval($event)\">\r\n\r\n              <ion-select-option value=0>\r\n                --Tất cả--\r\n              </ion-select-option>\r\n              <ion-select-option *ngFor=\"let time of initDatas.baoCaoDoanhSoType\" [value]=\"time.id\">\r\n                {{time.name}}\r\n              </ion-select-option>\r\n              <!-- <ion-select-option value=\"all\">\r\n                --Tất Cả--\r\n              </ion-select-option>\r\n              <ion-select-option value=\"today\">\r\n                Hôm nay\r\n              </ion-select-option>\r\n              <ion-select-option value=\"yesterday\">\r\n                Hôm qua\r\n              </ion-select-option>\r\n              <ion-select-option value=\"this_week\">\r\n                Tuần này\r\n              </ion-select-option>\r\n              <ion-select-option value=\"7_day_ago\">\r\n                7 ngày trước\r\n              </ion-select-option>\r\n              <ion-select-option value=\"this_month\">\r\n                Tháng này\r\n              </ion-select-option>\r\n              <ion-select-option value=\"30_days_ago\">\r\n                30 ngày trước\r\n              </ion-select-option>\r\n              <ion-select-option value=\"from_day_to_date\">\r\n                Từ ngày đến ngày\r\n              </ion-select-option> -->\r\n            </ion-select>\r\n\r\n          </ion-item>\r\n\r\n\r\n          <ion-item *ngIf=\"filterInterval.isShow\">\r\n            <!-- Calenda cho người dùng chọn khoảng thời gian lọc -->\r\n            <!-- <ion-datetime value=\"2022-04-21T00:00:00\" min=\"2022-03-01T00:00:00\" max=\"2022-05-31T23:59:59\"></ion-datetime> -->\r\n            <!-- <ion-datetime locale=\"vi-VI\"></ion-datetime> -->\r\n            <!-- <ion-datetime presentation=\"date-time\" [preferWheel]=\"true\"></ion-datetime> -->\r\n            <!-- <ion-datetime>\r\n  <span slot=\"title\">Select a Reservation Date</span>\r\n</ion-datetime> -->\r\n            <!-- <ion-datetime [showDefaultButtons]=\"true\" doneText=\"All set\" cancelText=\"Never mind\"> </ion-datetime> -->\r\n            <!-- <ion-datetime #datetime>\r\n  <ion-buttons slot=\"buttons\">\r\n    <ion-button color=\"danger\" (click)=\"datetime.reset()\">Reset</ion-button>\r\n    <ion-button color=\"primary\" (click)=\"datetime.cancel()\">Never mind</ion-button>\r\n    <ion-button color=\"primary\" (click)=\"datetime.confirm()\">All Set</ion-button>\r\n  </ion-buttons>\r\n</ion-datetime> -->\r\n            <span style=\"font-size: small;\">Từ ngày: </span>\r\n            <ion-datetime-button datetime=\"from-datetime\" style=\"font-size: small;\"></ion-datetime-button>\r\n\r\n            <ion-modal [keepContentsMounted]=\"true\">\r\n              <ng-template>\r\n\r\n\r\n                <ion-datetime #fromDatetime [(ngModel)]=\"this.filterInterval.pastTime\" [showDefaultTitle]=\"true\"\r\n                  [showDefaultButtons]=\"true\" locale=\"vi-VI\" id=\"from-datetime\" [showClearButton]=\"true\"\r\n                  (ionChange)=\"handleChangeFilterIntervalCustomByUser($event)\">\r\n                  <span slot=\"title\">Chọn thời gian bắt đầu</span>\r\n                </ion-datetime>\r\n              </ng-template>\r\n            </ion-modal>\r\n          </ion-item>\r\n\r\n          <ion-item *ngIf=\"filterInterval.isShow\">\r\n            <!-- Calenda cho người dùng chọn khoảng thời gian lọc -->\r\n            <!-- <ion-datetime value=\"2022-04-21T00:00:00\" min=\"2022-03-01T00:00:00\" max=\"2022-05-31T23:59:59\"></ion-datetime> -->\r\n\r\n\r\n            <!-- <ion-datetime locale=\"vn-VN\"></ion-datetime> -->\r\n\r\n            <!-- <ion-datetime presentation=\"date-time\" [preferWheel]=\"true\"></ion-datetime> -->\r\n\r\n            <!-- <ion-datetime>\r\n  <span slot=\"title\">Select a Reservation Date</span>\r\n</ion-datetime> -->\r\n            <!-- <ion-datetime [showDefaultButtons]=\"true\" doneText=\"All set\" cancelText=\"Never mind\"> </ion-datetime> -->\r\n            <!-- <ion-datetime #datetime>\r\n  <ion-buttons slot=\"buttons\">\r\n    <ion-button color=\"danger\" (click)=\"datetime.reset()\">Reset</ion-button>\r\n    <ion-button color=\"primary\" (click)=\"datetime.cancel()\">Never mind</ion-button>\r\n    <ion-button color=\"primary\" (click)=\"datetime.confirm()\">All Set</ion-button>\r\n  </ion-buttons>\r\n</ion-datetime> -->\r\n            <span style=\"font-size: small;\">Đến ngày: </span>\r\n            <ion-datetime-button style=\"font-size: small;\" datetime=\"toDatetime\"></ion-datetime-button>\r\n\r\n            <ion-modal [keepContentsMounted]=\"true\">\r\n              <ng-template>\r\n\r\n                <ion-datetime #toDatetime [(ngModel)]=\"this.filterInterval.presentTime\" [showDefaultTitle]=\"true\"\r\n                  [showDefaultButtons]=\"true\" locale=\"vi-VI\" id=\"toDatetime\" [showClearButton]=\"true\"\r\n                  [min]=\"filterInterval.pastTime\" (ionChange)=\"handleChangeFilterIntervalCustomByUser($event)\">\r\n                  <span slot=\"title\">Chọn thời gian bắt đầu</span>\r\n                  <!-- <ion-buttons slot=\"buttons\">\r\n                    <ion-button color=\"danger\" (click)=\"toDatetime.reset()\">Reset</ion-button>\r\n                    <ion-button color=\"primary\" (click)=\"toDatetime.cancel()\">Never mind</ion-button>\r\n                    <ion-button color=\"primary\" (click)=\"toDatetime.confirm()\">All Set</ion-button>\r\n                  </ion-buttons> -->\r\n                </ion-datetime>\r\n\r\n              </ng-template>\r\n            </ion-modal>\r\n          </ion-item>\r\n\r\n        </ion-list>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Nội dung -->\r\n    <div class=\"content-laboratory\">\r\n      <ion-list>\r\n\r\n        <!-- Danh các đối tác -->\r\n        <ion-item *ngFor=\"let request of listRequest; let i = index\">\r\n          <!-- Thông tin bệnh nhân -->\r\n          <ion-label>\r\n            <!-- Lịch hẹn -->\r\n            <div class=\"appointment-date\">\r\n              <div *ngIf=\"(request?.phone)\" class=\"info\">\r\n                <div>\r\n                  <ion-icon name=\"time-outline\"></ion-icon>\r\n                </div>\r\n                <h3 class=\"text\">{{request.appointmentDate | date : 'HH:mm dd/MM/YYYY'}}</h3>\r\n              </div>\r\n\r\n              <div class=\"request-type\">\r\n                <h3>{{request.requestTypeId | requestTypePipe : listTypeOrder}}</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Số điện thoại -->\r\n            <div *ngIf=\"(request?.phone)\" class=\"info\">\r\n              <div>\r\n                <ion-icon name=\"call-outline\"></ion-icon>\r\n              </div>\r\n              <h3 class=\"text\">{{request.phone}}</h3>\r\n            </div>\r\n\r\n            <!-- Địa chỉ -->\r\n            <div *ngIf=\"(request?.address)\" class=\"info\">\r\n              <div>\r\n                <ion-icon name=\"location-outline\"></ion-icon>\r\n              </div>\r\n              <h3 class=\"text address\">{{request.address}}</h3>\r\n            </div>\r\n\r\n            <!-- Chỉ định -->\r\n            <div *ngIf=\"(request?.comment)\" class=\"info\">\r\n              <div>\r\n                <ion-icon name=\"pulse-outline\"></ion-icon>\r\n              </div>\r\n              <h3 class=\"text comment\">{{request.comment}}</h3>\r\n            </div>\r\n\r\n            <!-- Tình trạng mẫu xét nghiệm *ngIf=\"(request?.requestType)\"-->\r\n            <div class=\"status\">\r\n              <!-- <h3>{{initDatas? (request.partner.status | orderStatus : initDatas?.orderStatus) : request.partner.status}}</h3> -->\r\n              <!-- <h3>{{request.requestType ? request.requestType.requestTypeName : 'Lấy mẫu'}}</h3> -->\r\n              <h3>{{request | statusRequestPipe}}</h3>\r\n            </div>\r\n          </ion-label>\r\n        </ion-item>\r\n      </ion-list>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Nút thêm mới -->\r\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n    <ion-fab-button (click)=\"openModalPatientLab()\">\r\n      <ion-icon name=\"add-outline\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab>\r\n</ion-content>\r\n\r\n\r\n<!-- Form modal add end edit a Patient  -->\r\n\r\n<ion-modal [isOpen]=\"isModalOpenFormPatient\">\r\n  <ng-template>\r\n    <!-- Tiêu đề -->\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <!-- Nút huỷ modal -->\r\n        <ion-buttons slot=\"start\">\r\n          <ion-button (click)=\"setOpenModalAddPatient(false)\">Huỷ</ion-button>\r\n        </ion-buttons>\r\n\r\n        <!-- Tiêu đề Modal -->\r\n        <ion-title>{{titleModalAddPatient}}</ion-title>\r\n\r\n        <!-- Nút thêm mới xét nghiệm -->\r\n        <ion-buttons slot=\"end\">\r\n          <ion-button (click)=\"saveModalAddPatient()\">Lưu</ion-button>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <!-- Nội dung -->\r\n    <!-- <p>{{itemPatientFormModalLab | json}}</p> -->\r\n    <ion-content class=\"ion-padding\">\r\n      <!-- Label dẫn dắt người dùng-->\r\n      <label [innerHTML]=\"instructionModalPatient\"></label>\r\n      <!-- Khôi nhập dữ liệu -->\r\n      <div>\r\n        <!-- Nhập hình thức thanh toán-->\r\n        <!-- Đối tác (ionCancel)=\"pushLog('ionCancel fired')\" (ionDismiss)=\"pushLog('ionDismiss fired')\"label=\"Floating label\" label-placement=\"floating\"-->\r\n        <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"floating\">\r\n              <ion-icon name=\"options-outline\"></ion-icon>\r\n              Loại Yêu cầu <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-select [interfaceOptions]=\"customAlertOptionsRequestType\" aria-label=\"parterns\"\r\n              placeholder=\"Chọn loại yêu cầu ...\" (ionChange)=\"handleChangeRequestType($event)\"\r\n              [(ngModel)]=\"itemPatientFormModalLab.valueRequestType\">\r\n              <ion-select-option *ngFor=\"let typeOrder of listTypeOrder\"\r\n                [value]=\"typeOrder.requestTypeId\">{{typeOrder.requestTypeName}}</ion-select-option>\r\n            </ion-select>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyRequestType\">*Loại yêu cầu không được để trống!</span>\r\n        </ion-col>\r\n\r\n        <!-- Nhập tên bệnh nhân -->\r\n        <!-- <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"stacked\">\r\n              <ion-icon name=\"person-outline\"></ion-icon>\r\n              Tên bệnh nhân <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-input [(ngModel)]=\"itemPatientFormModalLab.name\" type=\"text\" placeholder=\"Nhập tên bệnh nhân ...\"\r\n              (keyup)=\"onKeyUpInputNamePatient()\"></ion-input>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyFullName\">*Tên bệnh nhân không được để trống!</span>\r\n        </ion-col> -->\r\n\r\n        <!-- Nhập số điện thoại -->\r\n        <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"stacked\">\r\n              <ion-icon name=\"call-outline\"></ion-icon>\r\n              Số điện thoại <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-input type=\"tel\" placeholder=\"888-888-8888\" [(ngModel)]=\"itemPatientFormModalLab.phone\"\r\n              (keyup)=\"onKeyUpInputNumberPhone()\"></ion-input>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyNumberPhone\">*Số điện thoại không được để trống!</span>\r\n        </ion-col>\r\n\r\n        <!-- Nhập địa chỉ bệnh nhân -->\r\n        <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"stacked\">\r\n              <ion-icon name=\"location-outline\"></ion-icon>\r\n              Địa chỉ <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-input [(ngModel)]=\"itemPatientFormModalLab.address\" type=\"text\" (keyup)=\"onKeyUpInputAddress()\"\r\n              placeholder=\"Nhập địa chỉ ...\"></ion-input>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyAdress\">*Địa chỉ không được để trống!</span>\r\n        </ion-col>\r\n\r\n        <ion-col>\r\n          <ion-item *ngIf=\"'true'\">\r\n            <div style=\"display: flex; flex-direction: column;\">\r\n              <span>TG Lấy mấu/Thu mẫu: <span style=\"color:red\">*</span></span>\r\n              <ion-datetime-button datetime=\"time\"\r\n                style=\"margin-top: 0.5rem; margin-bottom: 0.25rem;\"></ion-datetime-button>\r\n            </div>\r\n\r\n            <ion-modal [keepContentsMounted]=\"true\">\r\n              <ng-template>\r\n                <!-- [(ngModel)]=\"this.itemPatientFormModalLab.timeSample\" -->\r\n                <ion-datetime [(ngModel)]=\"this.itemPatientFormModalLab.timeSample\" size=\"small\"\r\n                  [showDefaultTitle]=\"true\" [showDefaultButtons]=\"true\" locale=\"vi-VI\" id=\"time\"\r\n                  [showClearButton]=\"true\" (ionChange)=\"handleChangeTimeSample($event)\">\r\n                  <span slot=\"title\">TG Lấy mấu/Thu mẫu</span>\r\n                </ion-datetime>\r\n              </ng-template>\r\n            </ion-modal>\r\n          </ion-item>\r\n        </ion-col>\r\n\r\n        <!-- Nhập đối tác -->\r\n        <!-- Đối tác (ionCancel)=\"pushLog('ionCancel fired')\" (ionDismiss)=\"pushLog('ionDismiss fired')\"label=\"Floating label\" label-placement=\"floating\"-->\r\n        <!-- <ion-col>\r\n          <ion-item>\r\n            <ion-label position=\"floating\">\r\n              <ion-icon name=\"person-outline\"></ion-icon>\r\n              TT Đối tác <span style=\"color:red\">*</span>\r\n            </ion-label>\r\n            <ion-select aria-label=\"parterns\" placeholder=\"Chọn đối tác ...\" (ionChange)=\"handleChangePartner($event)\">\r\n              <ion-select-option *ngFor=\"let partner of listPartner\" [value]=\"partner.id\">{{partner.code}} -\r\n                {{partner.name}}</ion-select-option>\r\n            </ion-select>\r\n          </ion-item>\r\n          <span class=\"m-error\" *ngIf=\"validFormInput.isEmptyInfoPartner\">*TT Đối tác không được để trống!</span>\r\n        </ion-col> -->\r\n\r\n\r\n        <!-- Nhập địa chỉ Ghi chú-->\r\n        <!-- <ion-input id=\"custom-input\" label=\"Custom Counter Format\" labelPlacement=\"floating\" [counter]=\"true\"\r\n          maxlength=\"20\" [counterFormatter]=\"customCounterFormatter\"></ion-input> -->\r\n        <ion-item>\r\n          <ion-label position=\"floating\">\r\n            <ion-icon name=\"pencil-outline\"></ion-icon>\r\n            Ghi chú\r\n          </ion-label>\r\n          <ion-input [(ngModel)]=\"itemPatientFormModalLab.notes\" type=\"text\" placeholder=\"Thêm ghi chú ...\"></ion-input>\r\n        </ion-item>\r\n      </div>\r\n\r\n      <!-- Khối nút điều hướng -->\r\n      <!-- Tiếp tục thêm thông tin bệnh nhân cần lấy mẫu xét nghiệp -->\r\n      <!-- <div style=\"margin-top:1rem; display: flex; justify-content: end;\">\r\n        <ion-buttons slot=\"primary\">\r\n          <ion-button (click)=\"nextModalPatient()\">\r\n            Lưu và thêm mới ...\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </div> -->\r\n\r\n\r\n    </ion-content>\r\n  </ng-template>\r\n</ion-modal>\r\n"],"names":["Constant","IonModal","IsEmptyPipe","i0","ctx_r1","ctx_r28","ctx_r6","RequestsPage","constructor","photoService","popoverController","router","platform","localStorage","storage","navCtrl","pickerCtrl","actionSheetCtrl","notificationService","mainService","badgeService","appVersion","alertController","orderService","loadingCtrl","datePipe","generalService","isEmptyRequestType","isEmptyNumberPhone","isEmptyAdress","isEmptyTimeSample","subHeader","valueRequestType","name","phone","address","timeSample","transform","Date","notes","conditon","status","valueRequestTypePatient","namePatient","phoneNoPatient","addressPatient","orderStatus","isShow","presentTime","pastTime","header","translucent","now","listPatientLab","onKeyUpInputNamePatient","onKeyUpInputNumberPhone","validFormInput","isEmpty","itemPatientFormModalLab","onKeyUpInputAddress","ionViewDidLoad","ionViewWillLeave","ionViewDidLeave","ionViewWillUnload","ionViewDidEnter","ionViewWillEnter","ngOnInit","getSelectedUser","then","res","userInfo","getListInitialData","payload","page","pageSize","textSearch","fromDate","toDate","partnerId","receiveUserId","called","arrived","arrivedLabo","warning","received","requestTypeId","userCreated","canceled","getListRequestByPayload","getListOrderType","showLoading","loading","create","message","duration","present","getListOrder","barcode","patient","assignToUserId","counselors","isSendSMS","isPrintResult","patientAge","phoneNo","keyword","getOrders","subscribe","listOrder","data","error","showMessage","DANGER","navigate","getListRequestType","listTypeOrder","filter","en","requestTypeCode","isLoading","getRequest","listRequest","initDatas","JSON","parse","getItem","INIT_DATA","presentPopoverFilter","e","popoverFormFilter","event","isPopoverOpenFilter","getListPartner","listPartner","showProfile","logout","clearAll","dismiss","doRefresh","$event","setOpenModalAddPatient","isOpen","isModalOpenFormPatient","openModalPatientLab","instructionModalPatient","numberOfNewPatients","resetFormModalPatient","restartValidFormAddPatient","cancelModalAddPatient","confirmPatientModal","isPhone","isAddress","isRequest","isTimeSample","saveModalAddPatient","push","stringify","PARTNER_ID","item","userId","id","dateCreated","appointmentDate","receiveTime","arriveTime","completeTime","arriveLaboTime","returnResultReceiveTime","returnResultAppointmentDate","returnResultCompleteTime","requestSourceId","comment","addRequest","ret","code","SUCCESS","nextModalPatient","onWillDismiss","ev","detail","role","handleChangeSearch","keywordSearch","target","value","filterInterval","handleChangeSelectOrderStatus","formFilterTestSheet","handleChangeFilterInterval","setHours","currentDay","getDay","daysToSubtract","setDate","getDate","setMonth","getMonth","handleChangeFilterIntervalCustomByUser","handleChangeRequestType","handleChangeTimeSample","onSearchByFormFilter","restartFormFilter","requestType","orderStatusSelect","pushLog","msg","cancelFormFilter","selectors","viewQuery","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}